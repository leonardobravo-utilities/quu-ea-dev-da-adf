{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "quu-ea-prd-da-adf-001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Chris21_Archive_updateFileLoadDate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Transfer file to Archive folder in global scape",
				"activities": [
					{
						"name": "Lkp_getfilemetadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select  \n\n     FileFolderName \n\t ,SourceFileName\n    ,ArchiveFileFolderName =FileFolderName  + '\\Archive\\' + convert(varchar(20),dbo.udf_getLocalDTM(),112)\n\t,CheckpointColumn\n\t,CheckpointColumnValue\n\t,AzuresqlTargetTableName\nfrom etl.sourcesystem s\nLEFT OUTER JOIN ETL.SourceTableDetails d ON s.sourceid = d.sourceid \nLEFT OUTER JOIN ETL.SourceFileLoad SFL on replace(SFL.FileName,'.csv','') = d.SourceTableName\nwhere sourcename = '@{pipeline().parameters.SourceName}'  and d.isactive = 1",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lkp_getfilemetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lkp_getfilemetadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Chris21_Files_Copy_to_Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 0
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "FileServerWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_FS_GlobalScape_Chris21_Source",
											"type": "DatasetReference",
											"parameters": {
												"filefolder": {
													"value": "@item().FileFolderName",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().SourceFileName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_FS_GlobalScape_Chris21_Source",
											"type": "DatasetReference",
											"parameters": {
												"filefolder": {
													"value": "@item().ArchiveFileFolderName",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().SourceFileName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "StoredProcedureUpdateFileLoadDate",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Chris21_Files_Copy_to_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ETL].[usp_update_SourceFileLoad]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@item().SourceFileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_EDWDiscovery",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Checkpoint Column check",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "StoredProcedureUpdateFileLoadDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(coalesce(item().CheckpointColumn, ''),'')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Get Max CheckPointValue",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "SELECT max(@{item().CheckpointColumn}) AS CheckpointColumnMaxValue FROM @{item().AzuresqlTargetTableName}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL_EDWDiscovery",
														"type": "DatasetReference"
													}
												}
											},
											{
												"name": "PL_File_Monitoring_CheckPointValueCheck",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Get Max CheckPointValue",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_File_Monitoring_CheckPointValueCheck",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"CheckpointTableValue": {
															"value": "@activity('Get Max CheckPointValue').output.firstRow['CheckpointColumnMaxValue']",
															"type": "Expression"
														},
														"CheckpointFileLoadValue": {
															"value": "@item().CheckpointColumnValue",
															"type": "Expression"
														},
														"ErrorMessage": {
															"value": "@concat(item().SourceFileName,' was not received with latest ',item().CheckpointColumn, '. The current ', item().CheckpointColumn, ' is ',item().CheckpointColumnValue)",
															"type": "Expression"
														},
														"EmailTo": {
															"value": "@pipeline().parameters.EmailTo",
															"type": "Expression"
														},
														"Subject": {
															"value": "@pipeline().parameters.Subject",
															"type": "Expression"
														},
														"LogicAppURL": {
															"value": "@pipeline().parameters.LogicAppURL",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"parameters": {
					"sourcename": {
						"type": "string",
						"defaultValue": "CHRIS21"
					},
					"Subject": {
						"type": "string"
					},
					"EmailTo": {
						"type": "string"
					},
					"LogicAppURL": {
						"type": "string"
					}
				},
				"variables": {
					"Testvar": {
						"type": "String"
					},
					"targetblobfoldername": {
						"type": "String"
					},
					"ErrorMessage": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Chris21"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDW_Mart_LIWIS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dim_TradeWaste_Category",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_TradeWaste_Category]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_TradeWaste_Status",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_TradeWaste_Status]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_Risk_Rating",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Risk_Rating]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fact_Applications",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Dim_TradeWaste_Category",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Dim_TradeWaste_Status",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Dim_Risk_Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Dim_Officer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Fact_Applications]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fact_Approvals",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Fact_Applications",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Fact_Approvals]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_Officer",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Officer]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"sourcename": {
						"type": "string",
						"defaultValue": "LIWIS"
					}
				},
				"folder": {
					"name": "LIWIS-Model"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}