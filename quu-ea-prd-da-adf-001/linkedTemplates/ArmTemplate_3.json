{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "quu-ea-prd-da-adf-001"
		},
		"SILO_Daily_Trigger_properties_PL_Silo_Weather_Observations_parameters_Source_Name": {
			"type": "string",
			"defaultValue": "SILO"
		},
		"SILO_Daily_Trigger_properties_PL_Silo_Weather_Observations_parameters_Silo_load_type": {
			"type": "string",
			"defaultValue": "Incremental_Load"
		},
		"BOM_Daily_Trigger_properties_PL_BOM_SourceToAsql_parameters_SourceName": {
			"type": "string",
			"defaultValue": "BOM Weather Data"
		},
		"BOM_Daily_Trigger_properties_PL_BOM_SourceToAsql_parameters_OnlySourceToBlob": {
			"type": "bool",
			"defaultValue": true
		},
		"BOM_Daily_Trigger_properties_PL_BOM_SourceToAsql_parameters_OnlyBlobtoASQL": {
			"type": "bool",
			"defaultValue": true
		},
		"FSE_Daily_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_SourceName": {
			"type": "string",
			"defaultValue": "Field Service Edge"
		},
		"FSE_Daily_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_OnlySourceToBlob": {
			"type": "bool",
			"defaultValue": true
		},
		"FSE_Daily_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_OnlyBlobtoASQL": {
			"type": "bool",
			"defaultValue": true
		},
		"FSE_Hourly_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_SourceName": {
			"type": "string",
			"defaultValue": "Field Service Edge Hourly_Refresh"
		},
		"FSE_Hourly_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_OnlySourceToBlob": {
			"type": "bool",
			"defaultValue": true
		},
		"FSE_Hourly_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_OnlyBlobtoASQL": {
			"type": "bool",
			"defaultValue": true
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_TFSCS_TRFM_BlobToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID FROM etl.SourceSystem where \n SourceName='@{pipeline().parameters.Source_Name}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Table Metadata Information",
						"description": "Lookup activity to retrieve the list of partitions stored in the external control table.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_get_tablelist_by_sourceid]",
								"storedProcedureParameters": {
									"sourceid": {
										"type": "Int32",
										"value": {
											"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute_PL_EDWDiscovery_TRFM_BlobToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Table Metadata Information",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"source_name": {
						"type": "string",
						"defaultValue": "Tanker Filling Station Card Services"
					}
				},
				"folder": {
					"name": "Tanker Filling Station Card Services"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Temetra_BlobToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePL_TRFM_BLOBToASQL",
						"description": "Loading Temetra API Data into databricks delta and Azure sql db",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.firstRow['SourceID']",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "TEMETRA"
					}
				},
				"folder": {
					"name": "Temetra"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ABN_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_PL_ABN",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ABN_SourceToBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Exec_PL_ABN_BlobToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Exec_PL_ABN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ABN_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "ABN"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BOM_SourceToAsql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_BOM_DM_SourcetoBlob",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.FirstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "BOM Weather Data"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "BOM"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDWDiscovery_Delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID FROM etl.SourceSystem where \n SourceName='@{pipeline().parameters.Source_Name}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetSourceType",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select HostName from etl.SourceSystem\nwhere SourceID=@{activity('GetSourceID').output.Firstrow['SourceID']}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckForSourceType",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('GetSourceType').output.Firstrow['HostName'],NULL),false,true)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob_Delete_Sqlserver",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlobDelete_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob_Delete_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlobDelete_Oracle",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Source_Name": {
						"type": "string",
						"defaultValue": "OpenWindows_SIT"
					}
				},
				"folder": {
					"name": "Delete Process"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Ellipse9_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wait for EA Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Wait for EA Job",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(contains(activity('Query EA Job History').output,'firstRow'), equals(activity('Query EA Job History').output.Firstrow['JobOutCome'],1))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Query EA Job History",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "Select top(1 ) SUCCESS  as JobOutCome from dbo.z_run_history \nwhere cast(START_TIME as date) = cast(GETDATE() as date)  \n\norder by RUN_ID desc",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DS_SQL_ELLIPSE_ANALYTICS",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Wait If",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Query EA Job History",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(and(contains(activity('Query EA Job History').output,'firstRow'), equals(activity('Query EA Job History').output.Firstrow['JobOutCome'],1)))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait",
												"description": "",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 600
												}
											}
										]
									}
								}
							],
							"timeout": "01:00:00"
						}
					}
				],
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "Ellipse9"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "Ellipse9"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FSE_Source_To_ASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "Field_Service_Edge_UAT_DailyRefresh"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "FieldServicesEdge"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LIMS_Source_To_ASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_EDWDiscovery_TRFM_BlobToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_EDWDiscovery_SourceToBlob_SqlServer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID FROM etl.SourceSystem where \n SourceName='@{pipeline().parameters.Source_Name}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Execute_PL_EDWDiscovery_SourceToBlob_SqlServer",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"Source_Name": {
						"type": "string",
						"defaultValue": "LIMS"
					}
				},
				"folder": {
					"name": "LIMS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LIWIS_SourceToAsql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_Oracle",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "LIWIS"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "LIWIS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MDSProd_SourceToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "MDSProd"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "MDSProd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Openwindows_SourceToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "OpenWindows"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "OpenWindows"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Reference_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "REFERENCE"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "REF"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SUMS_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_SUMS_SourceToBlob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SUMS_SourcetoBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_SUMS_BlobToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_SUMS_SourceToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SUMS_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Load_Type": {
									"value": "@pipeline().parameters.Load_Type",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_SUMS_Daily_Consumption_And_Analysis",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_SUMS_BlobToASQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SUMS_Daily_Consumption_And_Analysis",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Source_Name": "SUMS",
								"Load_Type": {
									"value": "@pipeline().parameters.Load_Type",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"Load_Type": {
						"type": "string",
						"defaultValue": "Full"
					}
				},
				"folder": {
					"name": "SUMS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TFSCS_SourceToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute PL_TFSCS_DM_SourcetoBlob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TFSCS_DM_SourcetoBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute PL_TFSCS_TRFM_BlobToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute PL_TFSCS_DM_SourcetoBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TFSCS_TRFM_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "Tanker Filling Station Card Services"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TFSCS_TRFM_BlobToASQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Temetra_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Temetra Main Pipeline",
				"activities": [
					{
						"name": "PL_Temetra_API_Response",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Temetra_API_Response",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"databricks_cluster_id": {
									"value": "@pipeline().parameters.databricks_cluster_id",
									"type": "Expression"
								},
								"databricks_secret_name": {
									"value": "@pipeline().parameters.databricks_secret_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_Temetra_BlobToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_Temetra_API_Response",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Temetra_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_Temetra_Hourly_Consumption",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_Temetra_BlobToASQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Temetra_Hourly_Consumption",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"databricks_cluster_id": {
									"value": "@pipeline().parameters.databricks_cluster_id",
									"type": "Expression"
								},
								"databricks_secret_name": {
									"value": "@pipeline().parameters.databricks_secret_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_Temetra_Analysis_Service",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_Temetra_24HR_STATS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Temetra_Analysis_Service",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_Temetra_Potential_Leaks",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_Temetra_Hourly_Consumption",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Temetra_Potential_Leaks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"databricks_cluster_id": {
									"value": "@pipeline().parameters.databricks_cluster_id",
									"type": "Expression"
								},
								"databricks_secret_name": {
									"value": "@pipeline().parameters.databricks_secret_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_Temetra_24HR_STATS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_Temetra_Potential_Leaks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Temetra_24HR_STATS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"databricks_cluster_id": {
									"value": "@pipeline().parameters.databricks_cluster_id",
									"type": "Expression"
								},
								"databricks_secret_name": {
									"value": "@pipeline().parameters.databricks_secret_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"databricks_cluster_id": {
						"type": "string",
						"defaultValue": "0417-051914-axons909"
					},
					"databricks_secret_name": {
						"type": "string",
						"defaultValue": "databricks-token"
					}
				},
				"folder": {
					"name": "Temetra"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Temetra_BlobToASQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILO_Daily_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Silo_Weather_Observations",
							"type": "PipelineReference"
						},
						"parameters": {
							"Source_Name": "[parameters('SILO_Daily_Trigger_properties_PL_Silo_Weather_Observations_parameters_Source_Name')]",
							"Silo_load_type": "[parameters('SILO_Daily_Trigger_properties_PL_Silo_Weather_Observations_parameters_Silo_load_type')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-05-15T00:47:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								16
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABN_daily_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ABN data Ingestion via Web Api",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_ABN_Main",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-04-30T05:49:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								19
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_ABN_Main')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BOM_Daily_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_BOM_SourceToAsql",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceName": "[parameters('BOM_Daily_Trigger_properties_PL_BOM_SourceToAsql_parameters_SourceName')]",
							"OnlySourceToBlob": "[parameters('BOM_Daily_Trigger_properties_PL_BOM_SourceToAsql_parameters_OnlySourceToBlob')]",
							"OnlyBlobtoASQL": "[parameters('BOM_Daily_Trigger_properties_PL_BOM_SourceToAsql_parameters_OnlyBlobtoASQL')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-05-15T00:45:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								20
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BOM_SourceToAsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FSE_Daily_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_FSE_Source_To_ASQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceName": "[parameters('FSE_Daily_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_SourceName')]",
							"OnlySourceToBlob": "[parameters('FSE_Daily_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_OnlySourceToBlob')]",
							"OnlyBlobtoASQL": "[parameters('FSE_Daily_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_OnlyBlobtoASQL')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-06-23T06:30:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								14
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_FSE_Source_To_ASQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FSE_Hourly_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "FSE_Hourly_Trigger",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_FSE_Source_To_ASQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceName": "[parameters('FSE_Hourly_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_SourceName')]",
							"OnlySourceToBlob": "[parameters('FSE_Hourly_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_OnlySourceToBlob')]",
							"OnlyBlobtoASQL": "[parameters('FSE_Hourly_Trigger_properties_PL_FSE_Source_To_ASQL_parameters_OnlyBlobtoASQL')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-06-23T06:31:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								50
							],
							"hours": [
								19,
								20,
								21,
								22,
								23,
								0,
								1,
								2,
								3,
								4,
								5,
								6,
								7,
								8,
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_FSE_Source_To_ASQL')]"
			]
		}
	]
}