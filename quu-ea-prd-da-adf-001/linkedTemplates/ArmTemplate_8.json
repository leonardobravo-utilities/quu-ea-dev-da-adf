{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "quu-ea-prd-da-adf-001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_ABN_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_PL_ABN",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ABN_SourceToBlob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Exec_PL_ABN_BlobToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Exec_PL_ABN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ABN_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ABN"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BOM_DM_SourcetoBlob_stages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exc copy Stage",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BOM_DM_SourcetoBlob_stageCopy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Exc transform Stage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Exc copy Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BOM_DM_SourcetoBlob_stageTransform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceID": {
						"type": "string",
						"defaultValue": "11"
					}
				},
				"variables": {
					"Fileserverlocation": {
						"type": "String"
					},
					"FileFolderPath": {
						"type": "String"
					},
					"STATION_POINT_NAME": {
						"type": "String"
					},
					"TableID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BOM"
				},
				"annotations": [],
				"lastPublishTime": "2020-03-26T00:04:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BOM_Forecast_BlobToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePL_TRFM_BLOBToASQL",
						"description": "Loading Temetra API Data into databricks delta and Azure sql db",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.firstRow['SourceID']",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "BOM-FORECAST"
					}
				},
				"folder": {
					"name": "BOM"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Chris21_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FileMonitoring",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_Chris21_DM_SourcetoBlob",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"sourcename": {
												"value": "@pipeline().parameters.SourceName",
												"type": "Expression"
											},
											"TriggerName": {
												"value": "@pipeline().parameters.TriggerName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											},
											"TriggerName": {
												"value": "@pipeline().parameters.TriggerName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Archive_UpdateLoadDateforFile",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForBlobToASQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Chris21_Archive_updateFileLoadDate",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"sourcename": {
									"value": "@pipeline().parameters.SourceName",
									"type": "Expression"
								},
								"Subject": {
									"value": "@pipeline().parameters.SourceName",
									"type": "Expression"
								},
								"EmailTo": {
									"value": "@pipeline().parameters.EmailTo",
									"type": "Expression"
								},
								"LogicAppURL": {
									"value": "@pipeline().parameters.LogicAppURL",
									"type": "Expression"
								},
								"TriggerName": {
									"value": "@pipeline().parameters.TriggerName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "FileMonitoring",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_File_Monitoring",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Sourcename": "CHRIS21",
								"ErrorMessageFileNotReceived": "File not received",
								"EmailTo": {
									"value": "@pipeline().parameters.EmailTo",
									"type": "Expression"
								},
								"LogicAppURL": {
									"value": "@pipeline().parameters.LogicAppURL",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "CHRIS21"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					},
					"EmailTo": {
						"type": "string",
						"defaultValue": "Analytics-Support@urbanutilities.com.au;DL-IS-Analytics-Data-Foundation@urbanutilities.com.au"
					},
					"LogicAppURL": {
						"type": "string",
						"defaultValue": "https://prod-08.australiaeast.logic.azure.com:443/workflows/b473972d5dc743d8a7fe7451183104e4/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=K1XqCE2ZWAsChqL1-cjnP57avlNPOmrYgj4cTAXJ2uU"
					},
					"TriggerName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Chris21"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-05T05:45:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EAMS_Integration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "EAMS Integration"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "EAMS Integration"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDWDiscovery_DM_SourceToBlob_Blob_ConfigExcelWorkbooks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetConfigExcelWorkbooksList",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select distinct \nCASE \n         WHEN a.SourceFileName LIKE ''%.%'' THEN SUBSTRING(a.SourceFileName, 1, Charindex(''.'', a.SourceFileName) - 1) \n         ELSE a.SourceFileName\n       END AS ConfigSourceFileName \n,\nCASE \n         WHEN a.SourceFileName LIKE ''%.%'' THEN RIGHT(a.SourceFileName, Len(a.SourceFileName) - \n                                                       Charindex(''.'', a.SourceFileName)) \n         ELSE a.SourceFileName\n       END AS ConfigSourceFileNameExt \n, b.SourceName, a.SourceFileName AS ConfigSourceFileNameWithExt, b.SourceLandingContainer, b.FileFolderName from etl.SourceTableDetails a \nINNER JOIN etl.SourceSystem b ON a.SourceId = b.SourceId \nwhere a.IsActive = 1 and a.SourceId = ', pipeline().parameters.SourceID)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetConfigExcelWorkbooksList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetConfigExcelWorkbooksList').output.value\n\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute DM_SourcetoBlob_Blob_ActualExcelWorkbooks",
									"description": "Execute copy file to blob storage pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_Blob_ActualExcelWorkbooks",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"ConfigSourceFileName": {
												"value": "@item().ConfigSourceFileName",
												"type": "Expression"
											},
											"ConfigSourceFileNameExt": {
												"value": "@item().ConfigSourceFileNameExt",
												"type": "Expression"
											},
											"SourceName": {
												"value": "@item().SourceName",
												"type": "Expression"
											},
											"ConfigSourceFileNameWithExt": {
												"value": "@item().ConfigSourceFileNameWithExt",
												"type": "Expression"
											},
											"SourceLandingContainer": {
												"value": "@item().SourceLandingContainer",
												"type": "Expression"
											},
											"FileFolderName": {
												"value": "@item().FileFolderName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceID": {
						"type": "string",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "EDW_Discovery"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T05:48:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDWDiscovery_DM_SourceToBlob_GlobalScape_ActualExcelWorkbooks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachTable",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_Sort_srcLanding_Collection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_Sort_srcLanding_Collection').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set ActualExcelFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ActualExcelFileNameWithoutExt",
										"value": {
											"value": "@split(item().FileName,'.')[0]",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Excel File",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set ActualExcelFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(startswith(toLower(item().FileName),toLower(\n    replace(pipeline().parameters.ConfigSourceFileName, '*', '')\n    ))\n,endswith(toLower(item().FileName),toLower(pipeline().parameters.ConfigSourceFileNameExt)))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy to Archive_Empty",
												"description": "Full Copy from source table into blob storage",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "lkp_getlocaltime_Empty",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"deleteFilesAfterCompletion": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														}
													},
													"enableStaging": false,
													"dataIntegrationUnits": 0
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_FS_Srclanding_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.SourceLandingContainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.FileFolderName",
																"type": "Expression"
															},
															"blobfilename": {
																"value": "@item().FileName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_FS_Srclanding_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.SourceLandingContainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@concat(pipeline().parameters.FileFolderName, '/Archived')",
																"type": "Expression"
															},
															"blobfilename": {
																"value": "@concat(variables('ActualExcelFileNameWithoutExt') \n    ,'-'\n            ,activity('lkp_getlocaltime_Empty').output.firstRow.localstarttime, '.'\n             ,pipeline().parameters.ConfigSourceFileNameExt)",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Delete files from Blob_Empty",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "Copy to Archive_Empty",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ABLB_FS_Srclanding_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.SourceLandingContainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.FileFolderName",
																"type": "Expression"
															},
															"blobfilename": {
																"value": "@item().FileName",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "lkp_getlocaltime_Empty",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlMISource",
														"sqlReaderQuery": "select dbo.udf_covert_utc_to_local_Datetime(getdate()) as  localstarttime",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL_EDWDiscovery",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Execute DM_SourcetoBlob_Globalscape_ActualExcelWorkTabs",
												"description": "Execute copy file to blob storage pipeline",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_GlobalScape_ActualExcelTabs",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"SourceID": {
															"value": "@pipeline().parameters.SourceID",
															"type": "Expression"
														},
														"ExcelConfigWorkbookName": {
															"value": "@pipeline().parameters.ConfigSourceFileNameWithExt",
															"type": "Expression"
														},
														"ExcelActualWorkbookName": {
															"value": "@item().FileName",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Copy to Archive",
												"description": "Full Copy from source table into blob storage",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "lkp_getlocaltime",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FileServerReadSettings",
															"recursive": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "FileServerWriteSettings"
														}
													},
													"enableStaging": false,
													"dataIntegrationUnits": 0
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_FS_GlobalScape_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"GSfolderpath": {
																"value": "@pipeline().parameters.FileFolderName",
																"type": "Expression"
															},
															"GSfilename": {
																"value": "@item().FileName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_FS_GlobalScape_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"GSfolderpath": {
																"value": "@concat(pipeline().parameters.FileFolderName, '/Archived')",
																"type": "Expression"
															},
															"GSfilename": {
																"value": "@concat(variables('ActualExcelFileNameWithoutExt') \n    ,'-'\n            ,activity('lkp_getlocaltime').output.firstRow.localstarttime, '.'\n             ,pipeline().parameters.ConfigSourceFileNameExt)",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Delete files from Blob",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "Copy to Archive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ABLB_FS_GlobalScape_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"GSfolderpath": {
																"value": "@pipeline().parameters.FileFolderName",
																"type": "Expression"
															},
															"GSfilename": {
																"value": "@item().FileName",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "FileServerReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "lkp_getlocaltime",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Execute DM_SourcetoBlob_Globalscape_ActualExcelWorkTabs",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlMISource",
														"sqlReaderQuery": "select dbo.udf_covert_utc_to_local_Datetime(getdate()) as  localstarttime",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL_EDWDiscovery",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "GetActualExcelWorkbooksList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FS_GlobalScape_BinaryFile_source",
								"type": "DatasetReference",
								"parameters": {
									"filefolder": {
										"value": "@pipeline().parameters.FileFolderName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "lkp_Sort_srcLanding_Collection",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetActualExcelWorkbooksList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_sort_blob_file_name]",
								"storedProcedureParameters": {
									"json": {
										"type": "String",
										"value": {
											"value": "@string(activity('GetActualExcelWorkbooksList').output)",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceID": {
						"type": "string",
						"defaultValue": "3"
					},
					"ConfigSourceFileName": {
						"type": "string"
					},
					"ConfigSourceFileNameExt": {
						"type": "string"
					},
					"SourceName": {
						"type": "string"
					},
					"ConfigSourceFileNameWithExt": {
						"type": "string"
					},
					"SourceLandingContainer": {
						"type": "string"
					},
					"FileFolderName": {
						"type": "string"
					}
				},
				"variables": {
					"ActualExcelFileNameWithoutExt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "EDW_Discovery"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T05:48:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Ellipse5_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "Ellipse5"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "Ellipse5"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Ellipse9_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wait for EA Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Wait for EA Job",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(contains(activity('Query EA Job History').output,'firstRow'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Query EA Job History",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy MSFPackages table from EA to EDW Discovery",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "select distinct case when MSFPackages.[Status] in (1,0) then 'SUCCESS' else 'FAIL' end\nfrom\tETL.SourceSystem SS join ETL.SourceTableDetails STD on SS.SourceID = STD.SourceID \n\t\tjoin [Ellipse9].[MSFPackages] MSFPackages on lower(MSFPackages.sourcetablename) = STD.SourceTableName\nwhere\tSS.sourcename = 'Ellipse9'\n\t\tand MSFPackages.[Status] not in (1,0) and cast(MSFPackages.StartTime as date) = cast([dbo].[udf_getLocalDTM]() as date)",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_ASQL_EDWDiscovery",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Wait If",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Query EA Job History",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(activity('Query EA Job History').output,'firstRow' )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Truncate MSFPackages Table",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": "Truncate table [Ellipse9].[MSFPackages]\n\nSelect top 10 * from [Ellipse9].[MSFPackages]",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL_EDWDiscovery",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Wait",
												"description": "",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 600
												}
											}
										]
									}
								},
								{
									"name": "Copy MSFPackages table from EA to EDW Discovery",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "select \n'NA' as ROW_NATURAL_KEY,\n'NA' as ROW_SOURCE,\n'NA' as ROW_HASH_KEY,\n'NA' as ROW_EXECUTION_ID,\ncast ('1900-01-01' as datetime) as ROW_CREATED_DTM,\ncast ('1900-01-01' as datetime) as ROW_LAST_MODIFIED_DTM,\n'NA' as ROW_ACTION_TYPE,\nPackageName,\nProjectName,\nDefaultRunTime,\nAvgRunTime,\nEnabled,\nStatus,\nEXECID,\nStartTime,\nEndTime,\nTotalSecs,\nOverrideEnabled,\nLastModDate,\nIsEllipseTable,\nIsDeltaLoad,\nSourceTableName,\nPrimaryFields,\nTargetTable,\nIsDeltaDefault,\nLastGoodLoadDate,\nCIOTable,\nErrorDesc,\nDerived,\nHostRowCount,\nHostRowCountSQL\nfrom dbo.MSFPackages",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "Truncate table [Ellipse9].[MSFPackages]",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SQL_ELLIPSE_ANALYTICS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ASQL_EDWDiscovery_Table",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "[[Ellipse9].[MSFPackages]"
											}
										}
									]
								}
							],
							"timeout": "03:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "Ellipse9"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "Ellipse9"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Evoqua_Metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ExecutePL_TRFM_BLOBToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.firstRow['SourceID']",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "Evoqua-metadata"
					}
				},
				"folder": {
					"name": "Evoqua"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Evoqua_Telemetry')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePL_TRFM_BLOBToASQL",
						"description": "Loading Temetra API Data into databricks delta and Azure sql db",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.firstRow['SourceID']",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "Evoqua-telemetry"
					}
				},
				"folder": {
					"name": "Evoqua"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FSE_Source_To_ASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute EDW_Discovery to EDW_Mart Data Copy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForBlobToASQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Framework_DM_DiscoveryToMart_DataCopy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ModelName": "Crew-Roster-Mart-Model"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "Field_Service_Edge_UAT_DailyRefresh"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "FieldServicesEdge"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GIS_Source_To_ASQL_Oracle')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_Oracle",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "GIS"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "GIS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GIS_Source_To_ASQL_SQLServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "GIS_SQLServer_SDUV_SQL"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "GIS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LIMS_Source_To_ASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_EDWDiscovery_TRFM_BlobToASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_EDWDiscovery_SourceToBlob_SqlServer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID FROM etl.SourceSystem where \n SourceName='@{pipeline().parameters.Source_Name}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Execute_PL_EDWDiscovery_SourceToBlob_SqlServer",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceID": {
									"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Source_Name": {
						"type": "string",
						"defaultValue": "LIMS"
					}
				},
				"folder": {
					"name": "LIMS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LIWIS_SourceToAsql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_Oracle",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "LIWIS"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "LIWIS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MDSProd_SourceToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "MDSProd"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "MDSProd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_NetworkAccess_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lkp_getfilemetadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select \ns.sourceID,\ntableID, \nSourceLandingContainer,\nconcat('networkaccess-datalanding/',SourceTableName) as SourceFilePath,\nTargetBlobContainer,\nTargetBlobFilePath,\nTargetBlobFileName = lower(TargetBlobFileName + '_' + cast(SYSDATETIME() as varchar(100))+ targetBlobFileNameExt ),\nColumnDelimiter,QuoteCharacter\nfrom etl.sourcesystem s\nLEFT OUTER JOIN ETL.SourceTableDetails d\nON s.sourceid = d.sourceid \nand d.isactive = 1\nwhere sourcename='@{pipeline().parameters.sourcename}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOREACH_json_to_csv",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lkp_getfilemetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lkp_getfilemetadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Execute_json_csv_conversion",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_Framework_DM_json_to_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceLandingContainer": {
												"value": "@item().SourceLandingContainer",
												"type": "Expression"
											},
											"SourceFilePath": {
												"value": "@item().SourceFilePath",
												"type": "Expression"
											},
											"sourceID": {
												"value": "@item().sourceID",
												"type": "Expression"
											},
											"tableID": {
												"value": "@item().tableID",
												"type": "Expression"
											},
											"TargetBlobFilePath": {
												"value": "@item().TargetBlobFilePath",
												"type": "Expression"
											},
											"TargetBlobFileName": {
												"value": "@item().TargetBlobFileName",
												"type": "Expression"
											},
											"ColumnDelimiter": {
												"value": "@item().ColumnDelimiter",
												"type": "Expression"
											},
											"QuoteCharacter": {
												"value": "@item().QuoteCharacter",
												"type": "Expression"
											},
											"TargetBlobContainer": {
												"value": "@item().TargetBlobContainer",
												"type": "Expression"
											},
											"Additional_MappingParam": {
												"value": "@pipeline().parameters.Additional_MappingParam",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FOREACH_json_to_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetSourceID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "GetSourceID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_ASQL_EDWDiscovery",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "NetworkAccess"
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					},
					"Additional_MappingParam": {
						"type": "string",
						"defaultValue": ",\"collectionReference\": \"$['Entry']['attribute']\",\"mapComplexValuesToString\": true"
					}
				},
				"folder": {
					"name": "NetworkAccess"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_NetworkAccess_Source_To_ASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_MySQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "NetworkAccess"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "NetworkAccess"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Openwindows_SourceToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID from etl.SourceSystem\nwhere SourceName='@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckExecutionStatusForSourceToBlob",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlySourceToBlob",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlob_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "CheckExecutionStatusForBlobToASQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckExecutionStatusForSourceToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.OnlyBlobtoASQL",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutePL_TRFM_BLOBToASQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_TRFM_BlobToASQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.firstRow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "OpenWindows"
					},
					"OnlySourceToBlob": {
						"type": "bool",
						"defaultValue": true
					},
					"OnlyBlobtoASQL": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "OpenWindows"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}