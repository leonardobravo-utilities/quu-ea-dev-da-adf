{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "quu-ea-prd-da-adf-001"
		},
		"LS_ASQL_EDWDiscovery_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL_EDWDiscovery'"
		},
		"LS_ASQL_EDWMart_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL_EDWMart'"
		},
		"LS_ASQL_EDWTactical_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL_EDWTactical'"
		},
		"ADF_LS_AKV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://quu-ea-prd-da-key-vault.vault.azure.net/"
		},
		"LS_ABLB_quueadadlslanding001_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://quueaprddadlslanding001.blob.core.windows.net"
		},
		"LS_FS_FTP_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "@{linkedService().Host}"
		},
		"LS_HTTPS_Temetra_Geospatial_API_EndPoint_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat(linkedService().temetra_api_endpoint,'?networkmeterload=',linkedService().networkmeterload,'&auth=',linkedService().auth_token)}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_File_Monitoring_CheckPointValueCheck')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check the checkpoint value",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(pipeline().parameters.CheckpointTableValue,pipeline().parameters.CheckpointFileLoadValue)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Send email",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@pipeline().parameters.LogicAppURL",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\"DataFactoryName\":\"@{pipeline().DataFactory}\",\"PipelineName\":\"@{pipeline().Pipeline}\",\"Subject\":\"@{pipeline().parameters.Subject}\",\"ErrorMessage\":\"@{pipeline().parameters.ErrorMessage}\",\"EmailTo\":\"@{pipeline().parameters.EmailTo}\"}",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"CheckpointTableValue": {
						"type": "string"
					},
					"CheckpointFileLoadValue": {
						"type": "string"
					},
					"ErrorMessage": {
						"type": "string"
					},
					"EmailTo": {
						"type": "string"
					},
					"Subject": {
						"type": "string"
					},
					"LogicAppURL": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source File Monitoring"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_File_Monitoring_File_LastModifiedDate_Check')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition3",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(ticks(pipeline().parameters.LastModifiedDate),ticks(pipeline().parameters.LastLoadedDate))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send email",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@pipeline().parameters.LogicAppURL",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\"DataFactoryName\":\"@{pipeline().DataFactory}\",\"PipelineName\":\"@{pipeline().Pipeline}\",\"Subject\":\"@{pipeline().parameters.Subject}\",\"ErrorMessage\":\"@{variables('ErrorMessage')}\",\"EmailTo\":\"@{pipeline().parameters.EmailTo}\"}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ErrorMessage",
										"value": {
											"value": "@concat('Lastest file for ',pipeline().parameters.FileName,' is not recevied')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"LastModifiedDate": {
						"type": "string"
					},
					"Subject": {
						"type": "string"
					},
					"LastLoadedDate": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"EmailTo": {
						"type": "string",
						"defaultValue": "Vinayak.Khoje@urbanutilities.com.au"
					},
					"LogicAppURL": {
						"type": "string"
					}
				},
				"variables": {
					"ErrorMessage": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Source File Monitoring"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_File_Monitoring_File_Size_Check')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check if file is empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(pipeline().parameters.FileSize),5)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send email",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set error message",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@pipeline().parameters.LogicAppURL",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\"DataFactoryName\":\"@{pipeline().DataFactory}\",\"PipelineName\":\"@{pipeline().Pipeline}\",\"Subject\":\"@{pipeline().parameters.Subject}\",\"ErrorMessage\":\"@{variables('ErrorMessage')}\",\"EmailTo\":\"@{pipeline().parameters.EmailTo}\"}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set error message",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ErrorMessage",
										"value": {
											"value": "@concat('Lastest file for ',pipeline().parameters.FileName,' is empty')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"FileSize": {
						"type": "string",
						"defaultValue": "10"
					},
					"Subject": {
						"type": "string",
						"defaultValue": "C21"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "F1"
					},
					"EmailTo": {
						"type": "string",
						"defaultValue": "Vinayak.Khoje@urbanutilities.com.au"
					},
					"LogicAppURL": {
						"type": "string"
					}
				},
				"variables": {
					"ErrorMessage": {
						"type": "String"
					},
					"Filesize": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Source File Monitoring"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ProcessModel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is a general pipeline for ssas tabular model cube refresh. it would refresh the cube according to the parameter parsed in the pipeline.",
				"activities": [
					{
						"name": "Login",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&resource=https://*.asazure.windows.net&client_id=',pipeline().parameters.ClientID,'&client_secret=',encodeUriComponent(pipeline().parameters.ClientSecret))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UntilRefreshComplete",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "FilterToCurrentRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('GetAzureASRefreshStatus').output.status,'inProgress'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetAzureASRefreshStatus",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait30Seconds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes/',activity('FilterToCurrentRefresh').output.Value[0].refreshId)",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {
											"Authorization": {
												"value": "@concat(string(activity('Login').output.token_type),' ',string(activity('Login').output.access_token))",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Wait30Seconds",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 30
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "FilterToCurrentRefresh",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetAzureASRefreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('GetAzureASRefreshes').output.Response)",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(item().startTime,addseconds(activity('StartProcessingAzureAS').output.startTime,-30))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "StartProcessingAzureAS",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(string(activity('Login').output.token_type),' ',string(activity('Login').output.access_token))",
									"type": "Expression"
								}
							},
							"body": {
								"Type": "Full",
								"CommitMode": "transactional",
								"MaxParallelism": 10,
								"RetryCount": 2
							}
						}
					},
					{
						"name": "IfFailed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "UntilRefreshComplete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetAzureASRefreshStatus').output.status,'failed')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ThrowErrorOnFailure",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@string(activity('GetAzureASRefreshStatus').output)",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {}
									}
								}
							]
						}
					},
					{
						"name": "GetAzureASRefreshes",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "StartProcessingAzureAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().parameters.Region,'.asazure.windows.net/servers/',pipeline().parameters.Server,'/models/',pipeline().parameters.DatabaseName,'/refreshes')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@concat(string(activity('Login').output.token_type),' ',string(activity('Login').output.access_token))",
									"type": "Expression"
								}
							},
							"body": {
								"Type": "Full",
								"CommitMode": "transactional",
								"MaxParallelism": 10,
								"RetryCount": 2
							}
						}
					}
				],
				"parameters": {
					"TenantID": {
						"type": "String",
						"defaultValue": "855f3711-2ce2-4c7e-af5b-a513f6f2ae6d"
					},
					"ClientID": {
						"type": "String",
						"defaultValue": "89ad5ef1-4924-43a2-9dca-37e65f827ef8"
					},
					"ClientSecret": {
						"type": "String",
						"defaultValue": "[QG2xdpLS5T1l9-/MoK-?ALgjk/Enf.-"
					},
					"SubscriptionID": {
						"type": "String",
						"defaultValue": "3ae58716-8913-4137-b029-844b270cb4a0"
					},
					"Region": {
						"type": "String",
						"defaultValue": "australiaeast"
					},
					"Server": {
						"type": "String",
						"defaultValue": "quueaprddaaas001"
					},
					"DatabaseName": {
						"type": "String",
						"defaultValue": "Temetra"
					}
				},
				"folder": {
					"name": "Azure AS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_LS_AKV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "https://quu-ea-prd-da-key-vault.vault.azure.net/",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ADF_LS_AKV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_quueadadlslanding001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('LS_ABLB_quueadadlslanding001_properties_typeProperties_serviceEndpoint')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_EDWDiscovery')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_EDWDiscovery_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_EDWMart')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_EDWMart_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_EDWTactical')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_EDWTactical_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_FTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "FtpServer",
				"annotations": [],
				"typeProperties": {
					"host": "[parameters('LS_FS_FTP_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				},
				"parameters": {
					"Host": {
						"type": "string",
						"defaultValue": "ftp://ftp.bom.gov.au/"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_HTTPS_Temetra_Geospatial_API_EndPoint')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is the temetra geospatial API Endpoint for the bulk load. This endpoint will download a csv file.",
				"parameters": {
					"temetra_api_endpoint": {
						"type": "string",
						"defaultValue": "https://au.temetra.com/api//file"
					},
					"networkmeterload": {
						"type": "string",
						"defaultValue": "1"
					},
					"auth_token": {
						"type": "string",
						"defaultValue": "1c4be2ef9009863ac5c9af1b55051a"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_HTTPS_Temetra_Geospatial_API_EndPoint_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Self hosted runtime gateway nfujprd298",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Cost_Summary_By_Region')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "usp_load_Cost_Summary_by_Region",
						"description": "execute the stored procedure to reload the data into cost_summary_by_region table in tactical database",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_load_Cost_Summary_by_Region]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWTactical",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Cost_Summary_By_Region"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_EDWTactical')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDW_Mart_FinanceTransaction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_supplier",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Supplier]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_stock",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Stock]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_transactiontype",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_TransactionType]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_project",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_statistictype",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Project]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_postingaccount",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_PostingAccount]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_expenseelement",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_ExpenseElement]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_costcategory",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_CostCategory]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_subasset",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_supplier",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_SubAsset]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_employee",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_stock",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Employee]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_resourcetype",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_transactiontype",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_ResourceType]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_statistictype",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_StatisticType]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_earningsclass",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_postingaccount",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_EarningsClass]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_labourcostclass",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_expenseelement",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_LabourCostClass]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_balancetype",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_costcategory",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_BalanceType]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_gl_transaction",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_subasset",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "dim_employee",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "dim_resourcetype",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "dim_earningsclass",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "dim_labourcostclass",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "dim_balancetype",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "dim_project",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_GL_Transaction]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "fact_gl_transaction",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_gl_transaction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Fact_GL_Transaction]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"sourcename": {
						"type": "string",
						"defaultValue": "Ellipse9"
					}
				},
				"folder": {
					"name": "WorkOrder-Model"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_EDWMart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDW_Mart_WorkOrder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_burstmain",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_BurstMain]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": "Ellipse5",
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Date]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": null,
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_maintenancetype",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_MaintenanceType]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_product",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Product]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_servicearea",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_ServiceArea]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "MDS",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_userstatus",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_UserStatus]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workcategory",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkCategory]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workgroup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_burstmain",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkGroup]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workordertype",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkOrderType]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workpriority",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_maintenancetype",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkPriority]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_legalentity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_LegalEntity]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workorderattributes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_servicearea",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkOrderAttributes]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workordercomment",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_userstatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkOrderComment]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workrequestcomment",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_workcategory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkRequestComment]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_location",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_workgroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_workordertype",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_workpriority",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_legalentity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_workorderattributes",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_workordercomment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_workrequestcomment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Location]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_equipment",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_Equipment]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workrequest",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkRequest]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dim_workorder",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_equipment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dim_workrequest",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Dim_WorkOrder]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "fact_workorder",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dim_workorder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Mart].[usp_load_Fact_WorkOrder]",
							"storedProcedureParameters": {
								"from_dtm": {
									"value": null,
									"type": "DateTime"
								},
								"isdeltaload": {
									"value": "0",
									"type": "Byte"
								},
								"row_execution_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"sourcename": {
									"value": {
										"value": "@pipeline().parameters.sourcename",
										"type": "Expression"
									},
									"type": "String"
								},
								"to_dtm": {
									"value": null,
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_EDWMart",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"sourcename": {
						"type": "string",
						"defaultValue": "Ellipse9"
					}
				},
				"folder": {
					"name": "WorkOrder-Model"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_EDWMart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Temetra_Analysis_Service')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_Process_ssas_Model_Temetra",
						"description": "Process Temetra Model analysis service",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ProcessModel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"TenantID": "855f3711-2ce2-4c7e-af5b-a513f6f2ae6d",
								"ClientID": "89ad5ef1-4924-43a2-9dca-37e65f827ef8",
								"ClientSecret": "[QG2xdpLS5T1l9-/MoK-?ALgjk/Enf.-",
								"SubscriptionID": "3ae58716-8913-4137-b029-844b270cb4a0",
								"Region": "australiaeast",
								"Server": "quueaprddaaas001",
								"DatabaseName": "Temetra"
							}
						}
					}
				],
				"folder": {
					"name": "Temetra/backup"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_ProcessModel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLB_DataLanding_FileExists')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_quueadadlslanding001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"blobcontainer": {
						"type": "string"
					},
					"blobfolderpath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Framework"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().blobfolderpath",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().blobcontainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_quueadadlslanding001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLB_DataLanding_FizeSize')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_quueadadlslanding001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_quueadadlslanding001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLB_Datalanding')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_quueadadlslanding001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "string"
					},
					"TargetFileName": {
						"type": "string"
					},
					"ColumnDelimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"QuoteCharacter": {
						"type": "string",
						"defaultValue": "\""
					}
				},
				"folder": {
					"name": "Framework"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().TargetFileName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().FolderPath",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().ColumnDelimiter",
						"type": "Expression"
					},
					"rowDelimiter": "\n",
					"escapeChar": "º",
					"quoteChar": {
						"value": "@dataset().QuoteCharacter",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_quueadadlslanding001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLB_FS_Chris21_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_quueadadlslanding001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"targetblobfoldername": {
						"type": "string"
					},
					"targetblobfilename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Chris21"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().targetblobfilename",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().targetblobfoldername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"quoteChar": "¬"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_quueadadlslanding001')]"
			]
		}
	]
}