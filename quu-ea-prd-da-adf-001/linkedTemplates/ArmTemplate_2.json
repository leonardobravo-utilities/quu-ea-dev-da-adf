{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "quu-ea-prd-da-adf-001"
		},
		"LS_ASQL_EDWDiscovery_Dev_Test_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL_EDWDiscovery_Dev_Test'"
		},
		"LS_MySQL_NetAppManagement_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_MySQL_NetAppManagement'"
		},
		"LS_ORAC_Framework_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ORAC_Framework'"
		},
		"LS_SQL_Framework_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_Framework'"
		},
		"LS_API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://auapi.envizi.com/api/data/_Envizi-monthlydatasummaryallmeasures?End_Period=CURRENT_MONTH&Period=7"
		},
		"LS_API_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Analytics-Support@urbanutilities.com.au"
		},
		"LS_DBR_ADF_Job_Cluster_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "@linkedService().databricksclusterid"
		},
		"LS_FS_Globalscape_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\nfujprd310\\EBI_PROD_LANDING"
		},
		"LS_FS_Globalscape_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "urbanutilities\\SVC-EBI_PRDC04_AGT"
		},
		"LS_FS_NFUJPRD202_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\NFUJPRD202\\FDrive"
		},
		"LS_FS_NFUJPRD202_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "urbanutilities\\SVC-EBI_PRDC04_AGT"
		},
		"LS_FS_NFUJPRD301_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\NFUJPRD301\\EBI_PROD_LANDING"
		},
		"LS_FS_NFUJPRD301_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "urbanutilities\\SVC-EBI_PRDC04_AGT"
		},
		"LS_FS_ServiceNow_MidServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "@{linkedService().p_MidServerLocation}"
		},
		"LS_FS_ServiceNow_MidServer_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "urbanutilities\\SVC-EBI_PRDC04_AGT"
		},
		"LS_FS_globalscape_PowerBI_file_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\NFUJPRD310\\Power_BI"
		},
		"LS_FS_globalscape_PowerBI_file_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "urbanutilities\\SVC-EBI_PRDC04_AGT"
		},
		"LS_SF_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"LS_SF_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "analytics-support@urbanutilities.com.au"
		},
		"LS_SQL_ELLIPSE_ANALYTICS_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ellipse-analytics-connection-string"
		},
		"LS_SQL_ELLIPSE_ANALYTICS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "URBANUTILITIES\\SVC-EBI_PRDC04_AGT"
		},
		"LS_SQL_Framework_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().UserName}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_FS_FTP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FS_FTP",
					"type": "LinkedServiceReference",
					"parameters": {
						"Host": "ftp://ftp.bom.gov.au/"
					}
				},
				"parameters": {
					"FileFolderPath": {
						"type": "string",
						"defaultValue": "anon/gen/clim_data/IDCKWCDEA0/tables/qld/ brisbane"
					},
					"FileFolderName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": {
							"value": "@concat(dataset().FileFolderPath,dataset().FileFolderName)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Temetra_Geospatial_Meters_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_HTTPS_Temetra_Geospatial_API_EndPoint",
					"type": "LinkedServiceReference",
					"parameters": {
						"temetra_api_endpoint": "https://au.temetra.com/api//file",
						"networkmeterload": "1",
						"auth_token": "1c4be2ef9009863ac5c9af1b55051a"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"APIBaseURL": {
						"type": "string",
						"defaultValue": "https://auapi.envizi.com/api/data"
					},
					"APIReport": {
						"type": "string",
						"defaultValue": "monthlydatasummaryallmeasures"
					},
					"APICallParameter": {
						"type": "string",
						"defaultValue": "End_Period"
					},
					"APICallParameterValue": {
						"type": "string",
						"defaultValue": "Current_Month"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LS_API_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "Envizi-API-Password"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_EDWDiscovery_Dev_Test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_EDWDiscovery_Dev_Test_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "dev-test-edw-discovery-admin-password"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_DBR_ADF_Job_Cluster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Databricks Access Token",
				"parameters": {
					"databricksclusterid": {
						"type": "string",
						"defaultValue": "0417-051914-axons909"
					},
					"databrickssecretname": {
						"type": "string",
						"defaultValue": "databricks-token"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://australiaeast.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().databrickssecretname",
							"type": "Expression"
						}
					},
					"existingClusterId": "[parameters('LS_DBR_ADF_Job_Cluster_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_Globalscape')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_Globalscape_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_Globalscape_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "SVC-EBI-PRDC04-AGT"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_NFUJPRD202')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_NFUJPRD202_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_NFUJPRD202_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "SVC-EBI-PRDC04-AGT"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_NFUJPRD301')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_NFUJPRD301_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_NFUJPRD301_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "SVC-EBI-PRDC04-AGT"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_ServiceNow_MidServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Service Now mid-server -    \\\\NFUJPRD281\\c$\\Utils\\PROD\\export\\updates",
				"parameters": {
					"p_MidServerLocation": {
						"type": "string",
						"defaultValue": "\\\\NFUJPRD281\\c$\\Utils\\PROD\\export\\updates"
					}
				},
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_ServiceNow_MidServer_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_ServiceNow_MidServer_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "svc-ebi-prdc04-agt"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_globalscape_PowerBI_file')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_globalscape_PowerBI_file_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_globalscape_PowerBI_file_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "svc-ebi-prdc04-agt"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_MySQL_NetAppManagement')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Databasename": {
						"type": "string"
					},
					"SecretPasswordName": {
						"type": "string"
					},
					"Servername": {
						"type": "string"
					},
					"Username": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('LS_MySQL_NetAppManagement_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().SecretPasswordName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ORAC_Framework')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"HostName": {
						"type": "string"
					},
					"PortNo": {
						"type": "string"
					},
					"SID": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LS_ORAC_Framework_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().SecretName",
							"type": "Expression"
						}
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('LS_SF_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('LS_SF_properties_typeProperties_username')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "salesforce-prod-analytics-support-password"
					},
					"securityToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "salesforce-prod-analytics-support-securitytoken"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_ELLIPSE_ANALYTICS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_SQL_ELLIPSE_ANALYTICS_properties_typeProperties_connectionString_secretName')]"
					},
					"userName": "[parameters('LS_SQL_ELLIPSE_ANALYTICS_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "svc-ebi-prdc04-agt"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_Framework')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Servername": {
						"type": "string",
						"defaultValue": "PRDC04-SQL"
					},
					"Databasename": {
						"type": "string",
						"defaultValue": "EDW_DISCOVERY"
					},
					"SecretPasswordName": {
						"type": "string",
						"defaultValue": "svc-ebi-prdc04-agt"
					},
					"UserName": {
						"type": "string",
						"defaultValue": "urbanutilities\\svc-EBI_PRDC04_AGT"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_Framework_connectionString')]",
					"userName": "[parameters('LS_SQL_Framework_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().SecretPasswordName",
							"type": "Expression"
						}
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Archive_delete_JSONFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileNames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ABLB_srcLanding_FileExists",
								"type": "DatasetReference",
								"parameters": {
									"blobcontainer": {
										"value": "@pipeline().parameters.BlobContainer",
										"type": "Expression"
									},
									"blobfolderpath": {
										"value": "@pipeline().parameters.FilePath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Archive_Delete_loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterOnlyjsonFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterOnlyjsonFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Archive_proccessed_jsons",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ABLB_srclanding_json_source",
											"type": "DatasetReference",
											"parameters": {
												"Sourceblobfoldername": {
													"value": "@concat(pipeline().parameters.BlobContainer,'/',pipeline().parameters.FilePath)",
													"type": "Expression"
												},
												"Sourceblobfilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ABLB_srclanding_json_source",
											"type": "DatasetReference",
											"parameters": {
												"Sourceblobfoldername": {
													"value": "@concat(pipeline().parameters.BlobContainer,'/',pipeline().parameters.FilePath,'/Archived')",
													"type": "Expression"
												},
												"Sourceblobfilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete_files_after_archival",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Archive_proccessed_jsons",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ABLB_srclanding_json_source",
											"type": "DatasetReference",
											"parameters": {
												"Sourceblobfoldername": {
													"value": "@concat(pipeline().parameters.BlobContainer,'/',pipeline().parameters.FilePath)",
													"type": "Expression"
												},
												"Sourceblobfilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterOnlyjsonFiles",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileNames').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name, 'json')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BlobContainer": {
						"type": "string",
						"defaultValue": "eforms-datalanding/"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "ef039"
					}
				},
				"folder": {
					"name": "eForms"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BOM_TRFM_BlobFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetBlobStorageMetadata",
						"description": "check if any files need to process in the blob container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ABLB_DataLanding_FileExists",
								"type": "DatasetReference",
								"parameters": {
									"blobcontainer": {
										"value": "@pipeline().parameters.blobcontainer",
										"type": "Expression"
									},
									"blobfolderpath": {
										"value": "@pipeline().parameters.blobfolderpath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CheckAnyCsvFilesAndExecuteDatabricks",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_Sort_Collection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_Sort_Collection').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileName",
										"value": {
											"value": "@replace(string(item().FileName),'\\\"\\\"','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "executedatabricksnotebook",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SetProcessFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('processfile')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "MoveEmptyFile",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": "/edw_discovery/FileTransfer",
													"baseParameters": {
														"blobcontainer": {
															"value": "@pipeline().parameters.blobcontainer",
															"type": "Expression"
														},
														"storageaccount": {
															"value": "@pipeline().parameters.storageaccount",
															"type": "Expression"
														},
														"blobfilename": {
															"value": "@concat(pipeline().parameters.blobfilename,',',variables('FileName'))",
															"type": "Expression"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": {
															"value": "@pipeline().parameters.databricksclusterid",
															"type": "Expression"
														},
														"databrickssecretname": {
															"value": "@pipeline().parameters.databrickssecretname",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "ETL_Change_DateFormat",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": "/edw_discovery/ETL_Change_DateFormat_BOM",
													"baseParameters": {
														"blobcontainer": {
															"value": "@pipeline().parameters.blobcontainer",
															"type": "Expression"
														},
														"storageaccount": {
															"value": "@pipeline().parameters.storageaccount",
															"type": "Expression"
														},
														"blobfilename": {
															"value": "@concat(pipeline().parameters.blobfilename,',',variables('FileName'))",
															"type": "Expression"
														},
														"columnlist": {
															"value": "@pipeline().parameters.columnlist",
															"type": "Expression"
														},
														"ColumnDelimiter": {
															"value": "@pipeline().parameters.ColumnDelimiter",
															"type": "Expression"
														},
														"QuoteCharacter": {
															"value": "@base64(pipeline().parameters.QuoteCharacter)",
															"type": "Expression"
														},
														"STATION_POINT_NAME": {
															"value": "@pipeline().parameters.STATION_POINT_NAME",
															"type": "Expression"
														},
														"databrickssecretnamee": {
															"value": "@pipeline().parameters.databrickssecretname",
															"type": "Expression"
														},
														"databricksclusterid": {
															"value": "@pipeline().parameters.databricksclusterid",
															"type": "Expression"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": {
															"value": "@pipeline().parameters.databricksclusterid",
															"type": "Expression"
														},
														"databrickssecretname": {
															"value": "@pipeline().parameters.databrickssecretname",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "SetProcessFile",
									"description": "Process file if the file is csv and the file size is > 0 else do nothing",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "processfile",
										"value": {
											"value": "@if(AND(greater(variables('FileSize'),'0'), contains(variables('FileName'),'.csv') ),true,false)\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "RetrieveFileSize",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SetFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ABLB_DataLanding_FizeSize",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.blobcontainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.blobfolderpath",
													"type": "Expression"
												},
												"file": {
													"value": "@variables('FileName')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "SetFileSize",
									"description": "Assign the file size value to the variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RetrieveFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileSize",
										"value": {
											"value": "@string(activity('RetrieveFileSize').output.size)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "lkp_Sort_Collection",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetBlobStorageMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_sort_blob_file_name]",
								"storedProcedureParameters": {
									"json": {
										"type": "String",
										"value": {
											"value": "@string(activity('GetBlobStorageMetadata').output)",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"blobcontainer": {
						"type": "string"
					},
					"blobfolderpath": {
						"type": "string"
					},
					"storageaccount": {
						"type": "string"
					},
					"blobfilename": {
						"type": "string"
					},
					"columnlist": {
						"type": "string"
					},
					"QuoteCharacter": {
						"type": "string"
					},
					"STATION_POINT_NAME": {
						"type": "string"
					},
					"ColumnDelimiter": {
						"type": "string"
					},
					"databrickssecretname": {
						"type": "string"
					},
					"databricksclusterid": {
						"type": "string"
					}
				},
				"variables": {
					"processfile": {
						"type": "Boolean"
					},
					"FileNames": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					},
					"FileSize": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BOM"
				},
				"annotations": [],
				"lastPublishTime": "2020-03-17T04:56:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DBR_ADF_Job_Cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDWDiscovery_DM_SourceToBlob_Databricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Source Tables",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_get_tablelist_by_sourceid]",
								"storedProcedureParameters": {
									"sourceid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.SourceID",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Source Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Source Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Is Data Up to Date",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Refresh Values",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Get Refresh Values').output.firstRow.Uptodate_Ind, 1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Execute_SourceToBlob_Notebook",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": {
														"value": "@item().Command",
														"type": "Expression"
													},
													"baseParameters": {
														"Watermark_Value": {
															"value": "@activity('Get Refresh Values').output.firstRow.Watermark_Value",
															"type": "Expression"
														},
														"Expected_Fields": {
															"value": "@item().ColumnSchemaList",
															"type": "Expression"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": {
															"value": "@item().databricksclusterid",
															"type": "Expression"
														},
														"databrickssecretname": {
															"value": "@item().databrickssecretname",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "PostProcessingAfterDelta",
												"description": "Stored procedure activity to store the new high-watermark value into external control table for delta data loading. ",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Execute_SourceToBlob_Notebook",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 3,
													"retryIntervalInSeconds": 30
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[ETL].[usp_update_incrementaldatevalue]",
													"storedProcedureParameters": {
														"LastModifiedDTM": {
															"value": {
																"value": "@activity('Get Refresh Values').output.firstRow.Current_Max_Value",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"TableID": {
															"value": {
																"value": "@item().TableID",
																"type": "Expression"
															},
															"type": "Int32"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_ASQL_EDWDiscovery",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Get Refresh Values",
									"description": "",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[ETL].[usp_get_tablerefreshvalues]",
											"storedProcedureParameters": {
												"tableID": {
													"type": "Int32",
													"value": {
														"value": "@item().TableID",
														"type": "Expression"
													}
												}
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_ASQL_EDWDiscovery",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceID": {
						"type": "int",
						"defaultValue": 3
					}
				},
				"folder": {
					"name": "EDW_Discovery"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DBR_ADF_Job_Cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDWDiscovery_Delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID FROM etl.SourceSystem where \n SourceName='@{pipeline().parameters.Source_Name}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetSourceType",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select HostName from etl.SourceSystem\nwhere SourceID=@{activity('GetSourceID').output.Firstrow['SourceID']}",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckForSourceType",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetSourceType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('GetSourceType').output.Firstrow['HostName'],NULL),false,true)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob_Delete_Sqlserver",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlobDelete_SqlServer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "ExecutePL_EDWOnPrem_DM_SourcetoBlob_Delete_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_EDWDiscovery_DM_SourceToBlobDelete_Oracle",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceID": {
												"value": "@activity('GetSourceID').output.Firstrow['SourceID']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Source_Name": {
						"type": "string",
						"defaultValue": "OpenWindows_SIT"
					}
				},
				"folder": {
					"name": "Delete Process"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Evoqua_API_Parallel_Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch on tables",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Replication_Data",
									"activities": [
										{
											"name": "Execute Replication Data",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Get max sequence number",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/edw_discovery/Evoqua/EvoquaMetaData Replication Data",
												"baseParameters": {
													"maxsequencenumber": {
														"value": "@activity('Get max sequence number').output.firstRow.MaxSequenceNumber",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS_DBR_ADF_Job_Cluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"databricksclusterid": {
														"value": "@pipeline().parameters.DatabricksClusterId",
														"type": "Expression"
													},
													"databrickssecretname": {
														"value": "@pipeline().parameters.DatabricksSecretName",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "Get max sequence number",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "select cast(max(DataId) as nvarchar(100)) as MaxSequenceNumber from [Evoqua].[Replication_Data]",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "DS_ASQL_EDWDiscovery",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										}
									]
								},
								{
									"value": "Channel",
									"activities": [
										{
											"name": "Execute Channel",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/edw_discovery/Evoqua/EvoquaMetaData Channels"
											},
											"linkedServiceName": {
												"referenceName": "LS_DBR_ADF_Job_Cluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"databricksclusterid": {
														"value": "@pipeline().parameters.DatabricksClusterId",
														"type": "Expression"
													},
													"databrickssecretname": {
														"value": "@pipeline().parameters.DatabricksSecretName",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "Location",
									"activities": [
										{
											"name": "Execute Location",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/edw_discovery/Evoqua/EvoquaMetaData Locations"
											},
											"linkedServiceName": {
												"referenceName": "LS_DBR_ADF_Job_Cluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"databricksclusterid": {
														"value": "@pipeline().parameters.DatabricksClusterId",
														"type": "Expression"
													},
													"databrickssecretname": {
														"value": "@pipeline().parameters.DatabricksSecretName",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "Unit",
									"activities": [
										{
											"name": "Execute Unit",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/edw_discovery/Evoqua/EvoquaMetaData Units"
											},
											"linkedServiceName": {
												"referenceName": "LS_DBR_ADF_Job_Cluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"databricksclusterid": {
														"value": "@pipeline().parameters.DatabricksClusterId",
														"type": "Expression"
													},
													"databrickssecretname": {
														"value": "@pipeline().parameters.DatabricksSecretName",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"DatabricksClusterId": {
						"type": "string"
					},
					"DatabricksSecretName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Evoqua"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DBR_ADF_Job_Cluster')]"
			]
		}
	]
}