{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "quu-ea-prd-da-adf-001"
		},
		"LS_MySQL_NetAppManagement_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_MySQL_NetAppManagement'"
		},
		"LS_ORAC_Framework_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ORAC_Framework'"
		},
		"LS_SQL_Framework_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_Framework'"
		},
		"LS_FS_NFUJPRD301_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\NFUJPRD301\\EBI_PROD_LANDING"
		},
		"LS_FS_NFUJPRD301_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "urbanutilities\\SVC-EBI_PRDC04_AGT"
		},
		"LS_FS_ServiceNow_MidServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "@{linkedService().p_MidServerLocation}"
		},
		"LS_FS_ServiceNow_MidServer_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "urbanutilities\\SVC-EBI_PRDC04_AGT"
		},
		"LS_FS_globalscape_PowerBI_file_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\NFUJPRD310\\Power_BI"
		},
		"LS_FS_globalscape_PowerBI_file_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "urbanutilities\\SVC-EBI_PRDC04_AGT"
		},
		"LS_SF_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"LS_SF_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "analytics-support@urbanutilities.com.au"
		},
		"LS_SQL_ELLIPSE_ANALYTICS_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ellipse-analytics-connection-string"
		},
		"LS_SQL_ELLIPSE_ANALYTICS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "URBANUTILITIES\\SVC-EBI_PRDC04_AGT"
		},
		"LS_SQL_Framework_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().UserName}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_NFUJPRD301')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_NFUJPRD301_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_NFUJPRD301_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "SVC-EBI-PRDC04-AGT"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_ServiceNow_MidServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Service Now mid-server -    \\\\NFUJPRD281\\c$\\Utils\\PROD\\export\\updates",
				"parameters": {
					"p_MidServerLocation": {
						"type": "string",
						"defaultValue": "\\\\NFUJPRD281\\c$\\Utils\\PROD\\export\\updates"
					}
				},
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_ServiceNow_MidServer_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_ServiceNow_MidServer_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "svc-ebi-prdc04-agt"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_globalscape_PowerBI_file')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_globalscape_PowerBI_file_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_globalscape_PowerBI_file_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "svc-ebi-prdc04-agt"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_MySQL_NetAppManagement')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Databasename": {
						"type": "string"
					},
					"SecretPasswordName": {
						"type": "string"
					},
					"Servername": {
						"type": "string"
					},
					"Username": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('LS_MySQL_NetAppManagement_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().SecretPasswordName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ORAC_Framework')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"HostName": {
						"type": "string"
					},
					"PortNo": {
						"type": "string"
					},
					"SID": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LS_ORAC_Framework_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().SecretName",
							"type": "Expression"
						}
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('LS_SF_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('LS_SF_properties_typeProperties_username')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "salesforce-prod-analytics-support-password"
					},
					"securityToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "salesforce-prod-analytics-support-securitytoken"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_ELLIPSE_ANALYTICS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_SQL_ELLIPSE_ANALYTICS_properties_typeProperties_connectionString_secretName')]"
					},
					"userName": "[parameters('LS_SQL_ELLIPSE_ANALYTICS_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": "svc-ebi-prdc04-agt"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_Framework')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Servername": {
						"type": "string",
						"defaultValue": "PRDC04-SQL"
					},
					"Databasename": {
						"type": "string",
						"defaultValue": "EDW_DISCOVERY"
					},
					"SecretPasswordName": {
						"type": "string",
						"defaultValue": "svc-ebi-prdc04-agt"
					},
					"UserName": {
						"type": "string",
						"defaultValue": "urbanutilities\\svc-EBI_PRDC04_AGT"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_Framework_connectionString')]",
					"userName": "[parameters('LS_SQL_Framework_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ADF_LS_AKV",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().SecretPasswordName",
							"type": "Expression"
						}
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Archive_delete_JSONFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileNames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ABLB_srcLanding_FileExists",
								"type": "DatasetReference",
								"parameters": {
									"blobcontainer": {
										"value": "@pipeline().parameters.BlobContainer",
										"type": "Expression"
									},
									"blobfolderpath": {
										"value": "@pipeline().parameters.FilePath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Archive_Delete_loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterOnlyjsonFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterOnlyjsonFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Archive_proccessed_jsons",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ABLB_srclanding_json_source",
											"type": "DatasetReference",
											"parameters": {
												"Sourceblobfoldername": {
													"value": "@concat(pipeline().parameters.BlobContainer,'/',pipeline().parameters.FilePath)",
													"type": "Expression"
												},
												"Sourceblobfilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ABLB_srclanding_json_source",
											"type": "DatasetReference",
											"parameters": {
												"Sourceblobfoldername": {
													"value": "@concat(pipeline().parameters.BlobContainer,'/',pipeline().parameters.FilePath,'/Archived')",
													"type": "Expression"
												},
												"Sourceblobfilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete_files_after_archival",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Archive_proccessed_jsons",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ABLB_srclanding_json_source",
											"type": "DatasetReference",
											"parameters": {
												"Sourceblobfoldername": {
													"value": "@concat(pipeline().parameters.BlobContainer,'/',pipeline().parameters.FilePath)",
													"type": "Expression"
												},
												"Sourceblobfilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterOnlyjsonFiles",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileNames').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name, 'json')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BlobContainer": {
						"type": "string",
						"defaultValue": "eforms-datalanding/"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "ef039"
					}
				},
				"folder": {
					"name": "eForms"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BOM_TRFM_BlobFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetBlobStorageMetadata",
						"description": "check if any files need to process in the blob container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ABLB_DataLanding_FileExists",
								"type": "DatasetReference",
								"parameters": {
									"blobcontainer": {
										"value": "@pipeline().parameters.blobcontainer",
										"type": "Expression"
									},
									"blobfolderpath": {
										"value": "@pipeline().parameters.blobfolderpath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CheckAnyCsvFilesAndExecuteDatabricks",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_Sort_Collection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_Sort_Collection').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileName",
										"value": {
											"value": "@replace(string(item().FileName),'\\\"\\\"','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "executedatabricksnotebook",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SetProcessFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('processfile')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "MoveEmptyFile",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": "/edw_discovery/FileTransfer",
													"baseParameters": {
														"blobcontainer": {
															"value": "@pipeline().parameters.blobcontainer",
															"type": "Expression"
														},
														"storageaccount": {
															"value": "@pipeline().parameters.storageaccount",
															"type": "Expression"
														},
														"blobfilename": {
															"value": "@concat(pipeline().parameters.blobfilename,',',variables('FileName'))",
															"type": "Expression"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": "1207-062751-cr81ze79",
														"databrickssecretname": "databricks-token"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "ETL_Change_DateFormat",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": "/edw_discovery/ETL_Change_DateFormat",
													"baseParameters": {
														"blobcontainer": {
															"value": "@pipeline().parameters.blobcontainer",
															"type": "Expression"
														},
														"storageaccount": {
															"value": "@pipeline().parameters.storageaccount",
															"type": "Expression"
														},
														"blobfilename": {
															"value": "@concat(pipeline().parameters.blobfilename,',',variables('FileName'))",
															"type": "Expression"
														},
														"columnlist": {
															"value": "@pipeline().parameters.columnlist",
															"type": "Expression"
														},
														"ColumnDelimiter": {
															"value": "@pipeline().parameters.ColumnDelimiter",
															"type": "Expression"
														},
														"QuoteCharacter": {
															"value": "@base64(pipeline().parameters.QuoteCharacter)",
															"type": "Expression"
														},
														"STATION_POINT_NAME": {
															"value": "@pipeline().parameters.STATION_POINT_NAME",
															"type": "Expression"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": "1207-062751-cr81ze79",
														"databrickssecretname": "databricks-token"
													}
												}
											}
										]
									}
								},
								{
									"name": "SetProcessFile",
									"description": "Process file if the file is csv and the file size is > 0 else do nothing",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "processfile",
										"value": {
											"value": "@if(AND(greater(variables('FileSize'),'0'), contains(variables('FileName'),'.csv') ),true,false)\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "RetrieveFileSize",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SetFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ABLB_DataLanding_FizeSize",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.blobcontainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.blobfolderpath",
													"type": "Expression"
												},
												"file": {
													"value": "@variables('FileName')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "SetFileSize",
									"description": "Assign the file size value to the variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RetrieveFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileSize",
										"value": {
											"value": "@string(activity('RetrieveFileSize').output.size)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "lkp_Sort_Collection",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetBlobStorageMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_sort_blob_file_name]",
								"storedProcedureParameters": {
									"json": {
										"type": "String",
										"value": {
											"value": "@string(activity('GetBlobStorageMetadata').output)",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"blobcontainer": {
						"type": "string"
					},
					"blobfolderpath": {
						"type": "string"
					},
					"storageaccount": {
						"type": "string"
					},
					"blobfilename": {
						"type": "string"
					},
					"columnlist": {
						"type": "string"
					},
					"QuoteCharacter": {
						"type": "string"
					},
					"STATION_POINT_NAME": {
						"type": "string"
					},
					"ColumnDelimiter": {
						"type": "string"
					}
				},
				"variables": {
					"processfile": {
						"type": "Boolean"
					},
					"FileNames": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					},
					"FileSize": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BOM"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EDWDiscovery_DM_SourceToBlob_Databricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Source Tables",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_get_tablelist_by_sourceid]",
								"storedProcedureParameters": {
									"sourceid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.SourceID",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Source Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Source Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Is Data Up to Date",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Refresh Values",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Get Refresh Values').output.firstRow.Uptodate_Ind, 1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Execute_SourceToBlob_Notebook",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": {
														"value": "@item().Command",
														"type": "Expression"
													},
													"baseParameters": {
														"Watermark_Value": {
															"value": "@activity('Get Refresh Values').output.firstRow.Watermark_Value",
															"type": "Expression"
														},
														"Expected_Fields": {
															"value": "@item().ColumnSchemaList",
															"type": "Expression"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": {
															"value": "@item().databricksclusterid",
															"type": "Expression"
														},
														"databrickssecretname": {
															"value": "@item().databrickssecretname",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "PostProcessingAfterDelta",
												"description": "Stored procedure activity to store the new high-watermark value into external control table for delta data loading. ",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Execute_SourceToBlob_Notebook",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 3,
													"retryIntervalInSeconds": 30
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[ETL].[usp_update_incrementaldatevalue]",
													"storedProcedureParameters": {
														"LastModifiedDTM": {
															"value": {
																"value": "@activity('Get Refresh Values').output.firstRow.Current_Max_Value",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"TableID": {
															"value": {
																"value": "@item().TableID",
																"type": "Expression"
															},
															"type": "Int32"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_ASQL_EDWDiscovery",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Get Refresh Values",
									"description": "",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[ETL].[usp_get_tablerefreshvalues]",
											"storedProcedureParameters": {
												"tableID": {
													"type": "Int32",
													"value": {
														"value": "@item().TableID",
														"type": "Expression"
													}
												}
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_ASQL_EDWDiscovery",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceID": {
						"type": "int",
						"defaultValue": 3
					}
				},
				"folder": {
					"name": "EDW_Discovery"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Framework_DM_DiscoveryToMart_DataCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Each Model - Discovery to Mart Temp",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Model Objects To Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Model Objects To Load').output.value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Switch Load Type",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().LoadTypeName",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Copy Activity",
												"activities": [
													{
														"name": "Copy Dicovery to Mart Temp - Copy Activity",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "@concat('SELECT * FROM ', item().SourceSchemaName, '.', item().SourceObjectName, ' (NOLOCK)')",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"preCopyScript": {
																	"value": "@{concat('TRUNCATE TABLE TEMP.', item().TargetSchemaName, '_', item().TargetObjectName)}",
																	"type": "Expression"
																},
																"writeBehavior": "insert",
																"disableMetricsCollection": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DS_ASQL_EDWDiscovery",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "DS_ASQL_EDWMart_Target",
																"type": "DatasetReference",
																"parameters": {
																	"SchemaName": {
																		"value": "TEMP",
																		"type": "Expression"
																	},
																	"TableName": {
																		"value": "@concat(item().TargetSchemaName, '_', item().TargetObjectName)",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "Databricks Notebook",
												"activities": [
													{
														"name": "Copy Discovery to Mart Temp - Databricks Notebook",
														"type": "DatabricksNotebook",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"notebookPath": {
																"value": "@item().SourceTransformCommand",
																"type": "Expression"
															}
														},
														"linkedServiceName": {
															"referenceName": "LS_DBR_ADF_Job_Cluster",
															"type": "LinkedServiceReference",
															"parameters": {
																"databricksclusterid": {
																	"value": "@item().DatabricksClusterID",
																	"type": "Expression"
																},
																"databrickssecretname": "databricks-token"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Get Model Objects To Load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_get_model_object_load_list]",
								"storedProcedureParameters": {
									"ModelName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.ModelName",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Load Each Model - Mart Temp to Target",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Load Each Model - Discovery to Mart Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Model Objects To Load').output.value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy Temp to Target",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@item().TargetLoadCommand",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"isDebugFlag": {
												"value": "false",
												"type": "Boolean"
											},
											"sourceObject": {
												"value": {
													"value": "@concat('TEMP.', item().TargetSchemaName, '_', item().TargetObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"targetObject": {
												"value": {
													"value": "@concat(item().TargetSchemaName, '.', item().TargetObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"isTruncateBeforeLoad": {
												"value": {
													"value": "@item().TruncateBeforeLoad",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_EDWMart",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ModelName": {
						"type": "string",
						"defaultValue": "Crew-Roster-Mart-Model"
					}
				},
				"folder": {
					"name": "FrameWork"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Framework_DM_json_to_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetBlobStorageMetadata",
						"description": "check if any files need to process in the blob container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ABLB_srcLanding_FileExists",
								"type": "DatasetReference",
								"parameters": {
									"blobcontainer": {
										"value": "@pipeline().parameters.SourceLandingContainer",
										"type": "Expression"
									},
									"blobfolderpath": {
										"value": "@pipeline().parameters.SourceFilePath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "CheckAnyjsonFilesAndExecutecopy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_Sort_Collection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_Sort_Collection').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileName",
										"value": {
											"value": "@replace(string(item().FileName),'\\\"\\\"','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_dataTocsvFile",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SetProcessFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('processfile')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CopyFileToArchive_Empty",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"wildcardFolderPath": {
																"value": "@pipeline().parameters.TargetBlobFilePath",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@{variables('FileName')}",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.TargetBlobContainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.TargetBlobFilePath",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.TargetBlobContainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@concat(pipeline().parameters.TargetBlobFilePath,'/Archived/')\n",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteSourceFile_Empty",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyFileToArchive_Empty",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.TargetBlobContainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.TargetBlobFilePath",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false,
														"wildcardFileName": {
															"value": "@{variables('FileName')}",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Convert_jsonToCSV",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "GetSchemaMapping",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"wildcardFileName": "*.json",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"value": "@json(activity('GetSchemaMapping').output.firstrow.json_output)",
														"type": "Expression"
													}
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_srclanding_json_source",
														"type": "DatasetReference",
														"parameters": {
															"Sourceblobfoldername": {
																"value": "@concat(pipeline().parameters.SourceLandingContainer,'/',pipeline().parameters.SourceFilePath)",
																"type": "Expression"
															},
															"Sourceblobfilename": {
																"value": "@variables('FileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_Datalanding",
														"type": "DatasetReference",
														"parameters": {
															"FolderPath": {
																"value": "@pipeline().parameters.TargetBlobFilePath",
																"type": "Expression"
															},
															"TargetFileName": {
																"value": "@replace(variables('FileName'),'json','csv')",
																"type": "Expression"
															},
															"ColumnDelimiter": {
																"value": "@pipeline().parameters.ColumnDelimiter",
																"type": "Expression"
															},
															"QuoteCharacter": {
																"value": "@pipeline().parameters.QuoteCharacter",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "GetSchemaMapping",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[ETL].[usp_getColumnMapping_json_to_csv]",
														"storedProcedureParameters": {
															"additional_param": {
																"type": "String",
																"value": {
																	"value": "@pipeline().parameters.Additional_MappingParam",
																	"type": "Expression"
																}
															},
															"TableID": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.tableID",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL_EDWDiscovery",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "Archive_proccessed_jsons",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Convert_jsonToCSV",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_srclanding_json_source",
														"type": "DatasetReference",
														"parameters": {
															"Sourceblobfoldername": {
																"value": "@concat(pipeline().parameters.SourceLandingContainer,'/',pipeline().parameters.SourceFilePath)",
																"type": "Expression"
															},
															"Sourceblobfilename": {
																"value": "@variables('FileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_srclanding_json_source",
														"type": "DatasetReference",
														"parameters": {
															"Sourceblobfoldername": {
																"value": "@concat(pipeline().parameters.SourceLandingContainer,'/',pipeline().parameters.SourceFilePath,'\\Archived')",
																"type": "Expression"
															},
															"Sourceblobfilename": {
																"value": "@variables('FileName')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Delete_files_after_archival",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "Archive_proccessed_jsons",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ABLB_srclanding_json_source",
														"type": "DatasetReference",
														"parameters": {
															"Sourceblobfoldername": {
																"value": "@concat(pipeline().parameters.SourceLandingContainer,'/',pipeline().parameters.SourceFilePath)",
																"type": "Expression"
															},
															"Sourceblobfilename": {
																"value": "@variables('FileName')",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								},
								{
									"name": "SetProcessFile",
									"description": "Process file if the file is csv and the file size is > 0 else do nothing",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "processfile",
										"value": {
											"value": "@if(AND(greater(variables('FileSize'),'0'), contains(variables('FileName'),'.json') ),true,false)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "RetrieveFileSize",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SetFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ABLB_srclanding_json_source",
											"type": "DatasetReference",
											"parameters": {
												"Sourceblobfoldername": {
													"value": "@concat(pipeline().parameters.SourceLandingContainer,'/',pipeline().parameters.SourceFilePath)",
													"type": "Expression"
												},
												"Sourceblobfilename": {
													"value": "@variables('FileName')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "JsonReadSettings"
										}
									}
								},
								{
									"name": "SetFileSize",
									"description": "Assign the file size value to the variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RetrieveFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileSize",
										"value": {
											"value": "@string(activity('RetrieveFileSize').output.size)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "lkp_Sort_Collection",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetBlobStorageMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_sort_blob_file_name]",
								"storedProcedureParameters": {
									"json": {
										"type": "String",
										"value": {
											"value": "@string(activity('GetBlobStorageMetadata').output)",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceLandingContainer": {
						"type": "string"
					},
					"SourceFilePath": {
						"type": "string"
					},
					"sourceID": {
						"type": "string"
					},
					"tableID": {
						"type": "string"
					},
					"TargetBlobFilePath": {
						"type": "string"
					},
					"TargetBlobFileName": {
						"type": "string"
					},
					"ColumnDelimiter": {
						"type": "string"
					},
					"QuoteCharacter": {
						"type": "string"
					},
					"TargetBlobContainer": {
						"type": "string"
					},
					"Additional_MappingParam": {
						"type": "string"
					}
				},
				"variables": {
					"FileName": {
						"type": "String"
					},
					"processfile": {
						"type": "Boolean"
					},
					"FileSize": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FrameWork"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Framework_Migration_BlobToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetBlobStorageMetadata",
						"description": "check if any files need to process in the blob container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ABLB_DataLanding_FileExists",
								"type": "DatasetReference",
								"parameters": {
									"blobcontainer": {
										"value": "@pipeline().parameters.blobcontainer",
										"type": "Expression"
									},
									"blobfolderpath": {
										"value": "@pipeline().parameters.blobfolderpath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CheckAnyCsvFilesAndExecuteDatabricks",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "CheckForCDCMigration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_Sort_Collection').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileName",
										"value": {
											"value": "@replace(string(item().FileName),'\\\"\\\"','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "executedatabricksnotebook",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SetProcessFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('processfile')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CopyFileToArchive_Empty",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"wildcardFolderPath": {
																"value": "@{pipeline().parameters.blobfolderpath}",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@{variables('FileName')}",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.blobfolderpath",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@concat(pipeline().parameters.blobfolderpath,'/Archived/')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteSourceFile_Empty",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyFileToArchive_Empty",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.blobfolderpath",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false,
														"wildcardFileName": {
															"value": "@{variables('FileName')}",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "ETL_Merge",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": {
														"value": "@pipeline().parameters.ETLMergeNotebookPath",
														"type": "Expression"
													},
													"baseParameters": {
														"blobcontainer": {
															"value": "@pipeline().parameters.blobcontainer",
															"type": "Expression"
														},
														"storageaccount": {
															"value": "@pipeline().parameters.storageaccount",
															"type": "Expression"
														},
														"blobfilename": {
															"value": "@concat(pipeline().parameters.blobfilename,',',variables('FileName'))",
															"type": "Expression"
														},
														"columnlist": {
															"value": "@pipeline().parameters.columnlist",
															"type": "Expression"
														},
														"businesskeylist": {
															"value": "@pipeline().parameters.businesskeylist",
															"type": "Expression"
														},
														"deltastagingdbname": {
															"value": "@pipeline().parameters.deltastagingdbname",
															"type": "Expression"
														},
														"deltatargetdbname": {
															"value": "@pipeline().parameters.deltatargetdbname",
															"type": "Expression"
														},
														"deltastagetablename": {
															"value": "@pipeline().parameters.deltastagetablename",
															"type": "Expression"
														},
														"ColumnDelimiter": {
															"value": "@pipeline().parameters.ColumnDelimiter",
															"type": "Expression"
														},
														"QuoteCharacter": {
															"value": "@base64(pipeline().parameters.QuoteCharacter)",
															"type": "Expression"
														},
														"azuresqldbetllastmodifieddtm": {
															"value": "@formatDateTime(pipeline().parameters.azuresqldbetllastmodifieddtm,'yyyy-MM-dd hh:mm:ss.fff')",
															"type": "Expression"
														},
														"tableid": {
															"value": "@pipeline().parameters.tableid",
															"type": "Expression"
														},
														"deltastagingtableparquetfilepath": {
															"value": "@pipeline().parameters.deltastagingtableparquetfilepath",
															"type": "Expression"
														},
														"DbHostName": {
															"value": "@pipeline().parameters.DbHostName",
															"type": "Expression"
														},
														"azuresqltemptablename": {
															"value": "@pipeline().parameters.azuresqltemptablename",
															"type": "Expression"
														},
														"RowExecutionID": {
															"value": "@pipeline().RunId",
															"type": "Expression"
														},
														"RowSource": {
															"value": "@pipeline().parameters.RowSource",
															"type": "Expression"
														},
														"skipcsvrows": {
															"value": "@pipeline().parameters.skipcsvrows",
															"type": "Expression"
														},
														"ETLMergeNotebookPath": {
															"value": "@pipeline().parameters.ETLMergeNotebookPath",
															"type": "Expression"
														},
														"skipchangedset": {
															"value": "@if(variables('CDCRun'),'1','0')",
															"type": "Expression"
														},
														"CDCMigrationInd": {
															"value": "@string(coalesce(pipeline().parameters.CDCMigrationInd,0))",
															"type": "Expression"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": {
															"value": "@pipeline().parameters.databricksclusterid",
															"type": "Expression"
														},
														"databrickssecretname": {
															"value": "@pipeline().parameters.databrickssecretname",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "SqlServerStoredProcedureMergeData",
												"description": "execute merge store procedure to merge data from temp into target table in azure sql db",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "ETL_Merge",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": {
														"value": "@pipeline().parameters.StoredProcNameMergeAzuresqltable",
														"type": "Expression"
													},
													"storedProcedureParameters": {
														"table_source": {
															"value": {
																"value": "@pipeline().parameters.azuresqltemptablename",
																"type": "Expression"
															},
															"type": "String"
														},
														"table_target": {
															"value": {
																"value": "@pipeline().parameters.azuresqltargettablename",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableid": {
															"value": {
																"value": "@pipeline().parameters.tableid",
																"type": "Expression"
															},
															"type": "Int32"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_ASQL_EDWDiscovery",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyFileToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "SqlServerStoredProcedureMergeData",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"wildcardFolderPath": {
																"value": "@{pipeline().parameters.blobfolderpath}",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@{variables('FileName')}",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.blobfolderpath",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@concat(pipeline().parameters.blobfolderpath,'/Archived/')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteSourceFile",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyFileToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.blobfolderpath",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false,
														"wildcardFileName": {
															"value": "@{variables('FileName')}",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "TruncateTempTable",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteSourceFile",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "sp_executesql",
													"storedProcedureParameters": {
														"stmt": {
															"value": {
																"value": "truncate table @{pipeline().parameters.azuresqltemptablename}",
																"type": "Expression"
															}
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_ASQL_EDWDiscovery",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "SetProcessFile",
									"description": "Process file if the file is csv and the file size is > 0 else do nothing",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "processfile",
										"value": {
											"value": "@if(AND(greater(variables('FileSize'),'0'), contains(variables('FileName'),'.csv') ),true,false)\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "RetrieveFileSize",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SetFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ABLB_DataLanding_FizeSize",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.blobcontainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.blobfolderpath",
													"type": "Expression"
												},
												"file": {
													"value": "@variables('FileName')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "SetFileSize",
									"description": "Assign the file size value to the variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RetrieveFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileSize",
										"value": {
											"value": "@string(activity('RetrieveFileSize').output.size)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "lkp_Sort_Collection",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetBlobStorageMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_sort_blob_file_name]",
								"storedProcedureParameters": {
									"json": {
										"type": "String",
										"value": {
											"value": "@string(activity('GetBlobStorageMetadata').output)",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CheckForCDCMigration",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "lkp_Sort_Collection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(pipeline().parameters.CDCMigrationInd,1),not(equals(pipeline().parameters.CDCMigrationCompleted,1)))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ETLMergeChangeset",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/edw_discovery/ETL_Merge_Changedset",
										"baseParameters": {
											"blobcontainer": {
												"value": "@pipeline().parameters.blobcontainer",
												"type": "Expression"
											},
											"blobfilename": {
												"value": "@concat(pipeline().parameters.CDCBlobPath,',',pipeline().parameters.deltastagetablename,'.csv')",
												"type": "Expression"
											},
											"columnlist": {
												"value": "@pipeline().parameters.columnlist",
												"type": "Expression"
											},
											"businesskeylist": {
												"value": "@pipeline().parameters.businesskeylist",
												"type": "Expression"
											},
											"deltastagingdbname": {
												"value": "@pipeline().parameters.deltastagingdbname",
												"type": "Expression"
											},
											"deltatargetdbname": {
												"value": "@pipeline().parameters.deltatargetdbname",
												"type": "Expression"
											},
											"deltastagetablename": {
												"value": "@pipeline().parameters.deltastagetablename",
												"type": "Expression"
											},
											"storageaccount": {
												"value": "@pipeline().parameters.storageaccount",
												"type": "Expression"
											},
											"ColumnDelimiter": {
												"value": "@pipeline().parameters.ColumnDelimiter",
												"type": "Expression"
											},
											"QuoteCharacter": {
												"value": "@base64(pipeline().parameters.QuoteCharacter)",
												"type": "Expression"
											},
											"azuresqldbetllastmodifieddtm": {
												"value": "@pipeline().parameters.azuresqldbetllastmodifieddtm",
												"type": "Expression"
											},
											"tableid": {
												"value": "@pipeline().parameters.tableid",
												"type": "Expression"
											},
											"deltastagingtableparquetfilepath": {
												"value": "@pipeline().parameters.deltastagingtableparquetfilepath",
												"type": "Expression"
											},
											"DbHostName": {
												"value": "@pipeline().parameters.DbHostName",
												"type": "Expression"
											},
											"RowSource": {
												"value": "@pipeline().parameters.RowSource",
												"type": "Expression"
											},
											"RowExecutionID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"skipcsvrows": {
												"value": "@pipeline().parameters.skipcsvrows",
												"type": "Expression"
											},
											"SourceTableName": {
												"value": "@pipeline().parameters.SourceTableName",
												"type": "Expression"
											},
											"CDCMigrationInd": {
												"value": "@string(coalesce(pipeline().parameters.CDCMigrationInd,0))",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DBR_ADF_Job_Cluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"databricksclusterid": {
												"value": "@pipeline().parameters.databricksclusterid",
												"type": "Expression"
											},
											"databrickssecretname": {
												"value": "@pipeline().parameters.databrickssecretname",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "UpdateCDCMigrationInd",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ETLMergeChangeset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ETL].[usp_update_CDCMigrationCompleted]",
										"storedProcedureParameters": {
											"tableid": {
												"value": {
													"value": "@pipeline().parameters.tableid",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_EDWDiscovery",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SetCDCRun",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "UpdateCDCMigrationInd",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CDCRun",
										"value": {
											"value": "@bool(1)",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"blobcontainer": {
						"type": "string"
					},
					"storageaccount": {
						"type": "string"
					},
					"blobfilename": {
						"type": "string"
					},
					"columnlist": {
						"type": "string"
					},
					"businesskeylist": {
						"type": "string"
					},
					"deltastagingdbname": {
						"type": "string"
					},
					"deltatargetdbname": {
						"type": "string"
					},
					"deltastagetablename": {
						"type": "string"
					},
					"ColumnDelimiter": {
						"type": "string"
					},
					"azuresqldbetllastmodifieddtm": {
						"type": "string"
					},
					"tableid": {
						"type": "string"
					},
					"QuoteCharacter": {
						"type": "string"
					},
					"azuresqltemptablename": {
						"type": "string"
					},
					"blobfolderpath": {
						"type": "string"
					},
					"deltastagingtableparquetfilepath": {
						"type": "string"
					},
					"DbHostName": {
						"type": "string"
					},
					"RowSource": {
						"type": "string"
					},
					"azuresqltargettablename": {
						"type": "string"
					},
					"skipcsvrows": {
						"type": "string",
						"defaultValue": "0"
					},
					"ETLMergeNotebookPath": {
						"type": "string",
						"defaultValue": "/edw_discovery/ETL_Merge"
					},
					"StoredProcNameMergeAzuresqltable": {
						"type": "string",
						"defaultValue": "ETL.[usp_merge_azuresqltable]"
					},
					"databricksclustername": {
						"type": "string",
						"defaultValue": "ADF_Job_Cluster"
					},
					"databricksclusterid": {
						"type": "string",
						"defaultValue": "0827-051915-duchy366"
					},
					"CDCMigrationCompleted": {
						"type": "int"
					},
					"CDCBlobPath": {
						"type": "string"
					},
					"SourceTableName": {
						"type": "string"
					},
					"CDCMigrationInd": {
						"type": "int"
					},
					"databrickssecretname": {
						"type": "string"
					}
				},
				"variables": {
					"processfile": {
						"type": "Boolean"
					},
					"FileNames": {
						"type": "Array"
					},
					"FileName": {
						"type": "String"
					},
					"FileSize": {
						"type": "String"
					},
					"CDCRun": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "FrameWork"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Framework_TRFM_BlobToASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetBlobStorageMetadata",
						"description": "check if any files need to process in the blob container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ABLB_DataLanding_FileExists",
								"type": "DatasetReference",
								"parameters": {
									"blobcontainer": {
										"value": "@pipeline().parameters.blobcontainer",
										"type": "Expression"
									},
									"blobfolderpath": {
										"value": "@pipeline().parameters.blobfolderpath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CheckAnyCsvFilesAndExecuteDatabricks",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_Sort_Collection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_Sort_Collection').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileName",
										"value": {
											"value": "@replace(string(item().FileName),'\\\"\\\"','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "executedatabricksnotebook",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SetProcessFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('processfile')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CopyFileToArchive_Empty",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"wildcardFolderPath": {
																"value": "@{pipeline().parameters.blobfolderpath}",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@{variables('FileName')}",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.blobfolderpath",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@concat(pipeline().parameters.blobfolderpath,'/Archived/')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteSourceFile_Empty",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyFileToArchive_Empty",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.blobfolderpath",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false,
														"wildcardFileName": {
															"value": "@{variables('FileName')}",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "ETL_Merge",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 1,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": {
														"value": "@pipeline().parameters.ETLMergeNotebookPath",
														"type": "Expression"
													},
													"baseParameters": {
														"blobcontainer": {
															"value": "@pipeline().parameters.blobcontainer",
															"type": "Expression"
														},
														"storageaccount": {
															"value": "@pipeline().parameters.storageaccount",
															"type": "Expression"
														},
														"blobfilename": {
															"value": "@concat(pipeline().parameters.blobfilename,',',variables('FileName'))",
															"type": "Expression"
														},
														"columnlist": {
															"value": "@pipeline().parameters.columnlist",
															"type": "Expression"
														},
														"businesskeylist": {
															"value": "@pipeline().parameters.businesskeylist",
															"type": "Expression"
														},
														"deltastagingdbname": {
															"value": "@pipeline().parameters.deltastagingdbname",
															"type": "Expression"
														},
														"deltatargetdbname": {
															"value": "@pipeline().parameters.deltatargetdbname",
															"type": "Expression"
														},
														"deltastagetablename": {
															"value": "@pipeline().parameters.deltastagetablename",
															"type": "Expression"
														},
														"ColumnDelimiter": {
															"value": "@pipeline().parameters.ColumnDelimiter",
															"type": "Expression"
														},
														"QuoteCharacter": {
															"value": "@base64(pipeline().parameters.QuoteCharacter)",
															"type": "Expression"
														},
														"azuresqldbetllastmodifieddtm": {
															"value": "@formatDateTime(pipeline().parameters.azuresqldbetllastmodifieddtm,'yyyy-MM-dd HH:mm:ss.fff')",
															"type": "Expression"
														},
														"tableid": {
															"value": "@pipeline().parameters.tableid",
															"type": "Expression"
														},
														"deltastagingtableparquetfilepath": {
															"value": "@pipeline().parameters.deltastagingtableparquetfilepath",
															"type": "Expression"
														},
														"DbHostName": {
															"value": "@pipeline().parameters.DbHostName",
															"type": "Expression"
														},
														"azuresqltemptablename": {
															"value": "@pipeline().parameters.azuresqltemptablename",
															"type": "Expression"
														},
														"RowExecutionID": {
															"value": "@pipeline().RunId",
															"type": "Expression"
														},
														"RowSource": {
															"value": "@pipeline().parameters.RowSource",
															"type": "Expression"
														},
														"skipcsvrows": {
															"value": "@pipeline().parameters.skipcsvrows",
															"type": "Expression"
														},
														"ETLMergeNotebookPath": {
															"value": "@pipeline().parameters.ETLMergeNotebookPath",
															"type": "Expression"
														},
														"skipchangedset": {
															"value": "@pipeline().parameters.skipchangedset",
															"type": "Expression"
														},
														"skipbottomrows": {
															"value": "@pipeline().parameters.skipbottomrows",
															"type": "Expression"
														},
														"incrementalloadind": {
															"value": "@pipeline().parameters.incrementalloadind",
															"type": "Expression"
														},
														"checkfordeletesind": {
															"value": "@pipeline().parameters.checkfordeletesind",
															"type": "Expression"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": {
															"value": "@pipeline().parameters.databricksclusterid",
															"type": "Expression"
														},
														"databrickssecretname": {
															"value": "@pipeline().parameters.databrickssecretname",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "SqlServerStoredProcedureMergeData",
												"description": "execute merge store procedure to merge data from temp into target table in azure sql db",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "ETL_Merge",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": {
														"value": "@pipeline().parameters.StoredProcNameMergeAzuresqltable",
														"type": "Expression"
													},
													"storedProcedureParameters": {
														"table_source": {
															"value": {
																"value": "@pipeline().parameters.azuresqltemptablename",
																"type": "Expression"
															},
															"type": "String"
														},
														"table_target": {
															"value": {
																"value": "@pipeline().parameters.azuresqltargettablename",
																"type": "Expression"
															},
															"type": "String"
														},
														"tableid": {
															"value": {
																"value": "@pipeline().parameters.tableid",
																"type": "Expression"
															},
															"type": "Int32"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_ASQL_EDWDiscovery",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyFileToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "SqlServerStoredProcedureMergeData",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"wildcardFolderPath": {
																"value": "@{pipeline().parameters.blobfolderpath}",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@{variables('FileName')}",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.blobfolderpath",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@concat(pipeline().parameters.blobfolderpath,'/Archived/')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteSourceFile",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyFileToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ABLB_DataLanding_FileExists",
														"type": "DatasetReference",
														"parameters": {
															"blobcontainer": {
																"value": "@pipeline().parameters.blobcontainer",
																"type": "Expression"
															},
															"blobfolderpath": {
																"value": "@pipeline().parameters.blobfolderpath",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false,
														"wildcardFileName": {
															"value": "@{variables('FileName')}",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "SetProcessFile",
									"description": "Process file if the file is csv and the file size is > 0 else do nothing",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "processfile",
										"value": {
											"value": "@if(AND(greater(variables('FileSize'),'0'), contains(variables('FileName'),'.csv') ),true,false)\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "RetrieveFileSize",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SetFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ABLB_DataLanding_FizeSize",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.blobcontainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.blobfolderpath",
													"type": "Expression"
												},
												"file": {
													"value": "@variables('FileName')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "SetFileSize",
									"description": "Assign the file size value to the variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RetrieveFileSize",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileSize",
										"value": {
											"value": "@string(activity('RetrieveFileSize').output.size)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "lkp_Sort_Collection",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetBlobStorageMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_sort_blob_file_name]",
								"storedProcedureParameters": {
									"json": {
										"type": "String",
										"value": {
											"value": "@string(activity('GetBlobStorageMetadata').output)",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"blobcontainer": {
						"type": "string"
					},
					"storageaccount": {
						"type": "string"
					},
					"blobfilename": {
						"type": "string"
					},
					"columnlist": {
						"type": "string"
					},
					"businesskeylist": {
						"type": "string"
					},
					"deltastagingdbname": {
						"type": "string"
					},
					"deltatargetdbname": {
						"type": "string"
					},
					"deltastagetablename": {
						"type": "string"
					},
					"ColumnDelimiter": {
						"type": "string"
					},
					"azuresqldbetllastmodifieddtm": {
						"type": "string"
					},
					"tableid": {
						"type": "string"
					},
					"QuoteCharacter": {
						"type": "string"
					},
					"azuresqltemptablename": {
						"type": "string"
					},
					"blobfolderpath": {
						"type": "string"
					},
					"deltastagingtableparquetfilepath": {
						"type": "string"
					},
					"DbHostName": {
						"type": "string"
					},
					"RowSource": {
						"type": "string"
					},
					"azuresqltargettablename": {
						"type": "string"
					},
					"skipcsvrows": {
						"type": "string",
						"defaultValue": "0"
					},
					"skipbottomrows": {
						"type": "string",
						"defaultValue": "0"
					},
					"ETLMergeNotebookPath": {
						"type": "string",
						"defaultValue": "/edw_discovery/ETL_Merge"
					},
					"StoredProcNameMergeAzuresqltable": {
						"type": "string",
						"defaultValue": "ETL.[usp_merge_azuresqltable]"
					},
					"databricksclustername": {
						"type": "string",
						"defaultValue": "ADF_Job_Cluster"
					},
					"databricksclusterid": {
						"type": "string",
						"defaultValue": "0827-051915-duchy366"
					},
					"SourceTableName": {
						"type": "string"
					},
					"skipchangedset": {
						"type": "string",
						"defaultValue": "0"
					},
					"databrickssecretname": {
						"type": "string"
					},
					"checkfordeletesind": {
						"type": "string",
						"defaultValue": "0"
					},
					"incrementalloadind": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"variables": {
					"processfile": {
						"type": "Boolean"
					},
					"FileNames": {
						"type": "Array"
					},
					"FileName": {
						"type": "String"
					},
					"FileSize": {
						"type": "String"
					},
					"CDCRun": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "FrameWork"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SUMS_Daily_Consumption_And_Analysis')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SUMS_Daily_Consumption",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "GetSourceID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/edw_discovery/SUMS/SUMS_DailyConsumption",
							"baseParameters": {
								"Load_Type": {
									"value": "@pipeline().parameters.Load_Type",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_DBR_ADF_Job_Cluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"databricksclusterid": {
									"value": "@activity('GetSourceID').output.Firstrow['databricksclusterid']",
									"type": "Expression"
								},
								"databrickssecretname": {
									"value": "@activity('GetSourceID').output.Firstrow['databrickssecretname']",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetSourceID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select SourceID,databricksclusterid,databrickssecretname FROM etl.SourceSystem where \n SourceName='@{pipeline().parameters.Source_Name}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SUMS_MovingAnalysis",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SUMS_Daily_Consumption",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/edw_discovery/SUMS/SUMS_MovingAnalysis",
							"baseParameters": {
								"Load_Type": {
									"value": "@pipeline().parameters.Load_Type",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_DBR_ADF_Job_Cluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"databricksclusterid": {
									"value": "@activity('GetSourceID').output.Firstrow['databricksclusterid']",
									"type": "Expression"
								},
								"databrickssecretname": {
									"value": "@activity('GetSourceID').output.Firstrow['databrickssecretname']",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SUMS_KCA_Consumption",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SUMS_MovingAnalysis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/edw_discovery/SUMS/SUMS_KCA_Consumption"
						},
						"linkedServiceName": {
							"referenceName": "LS_DBR_ADF_Job_Cluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"databricksclusterid": {
									"value": "@activity('GetSourceID').output.Firstrow['databricksclusterid']",
									"type": "Expression"
								},
								"databrickssecretname": {
									"value": "@activity('GetSourceID').output.Firstrow['databrickssecretname']",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Source_Name": {
						"type": "string",
						"defaultValue": "SUMS"
					},
					"Load_Type": {
						"type": "string",
						"defaultValue": "Full"
					}
				},
				"folder": {
					"name": "SUMS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_StartFSECluster')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start FSE Cluster",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Get FSE Cluster ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/edw_discovery/FSE/Start FSE Cluster"
						},
						"linkedServiceName": {
							"referenceName": "LS_DBR_ADF_Job_Cluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"databricksclusterid": {
									"value": "@activity('Get FSE Cluster ID').output.firstrow.databricksclusterid",
									"type": "Expression"
								},
								"databrickssecretname": {
									"value": "@activity('Get FSE Cluster ID').output.firstrow.databrickssecretname",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get FSE Cluster ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct databricksclusterid,databrickssecretname  from ETL.SourceSystem\nwhere databricksclustername = 'ADF_Job_Cluster_FSE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_EDWDiscovery",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "FieldServicesEdge"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Temetra_24HR_STATS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Temetra_24HR_STATS",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/edw_discovery/Temetra/Temetra_24Hr_Stats"
						},
						"linkedServiceName": {
							"referenceName": "LS_DBR_ADF_Job_Cluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"databricksclusterid": {
									"value": "@pipeline().parameters.databricks_cluster_id",
									"type": "Expression"
								},
								"databrickssecretname": {
									"value": "@pipeline().parameters.databricks_secret_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"databricks_cluster_id": {
						"type": "string"
					},
					"databricks_secret_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Temetra/backup"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Temetra_API_Call')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3_Temetra_API_Response_Management",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/edw_discovery/Temetra/3_Temetra_API_Response_Management",
							"baseParameters": {
								"Load_Type": {
									"value": "@pipeline().parameters.param_load_type",
									"type": "Expression"
								},
								"InitialStartDate": {
									"value": "@pipeline().parameters.param_startdate",
									"type": "Expression"
								},
								"InitialEndDate": {
									"value": "@pipeline().parameters.param_enddate",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_DBR_ADF_Job_Cluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"databricksclusterid": "0818-004527-fleck168",
								"databrickssecretname": "databricks-token"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"databricks_cluster_id": {
						"type": "string",
						"defaultValue": "0417-051914-axons909"
					},
					"databricks_secret_name": {
						"type": "string",
						"defaultValue": "databricks-token"
					},
					"param_load_type": {
						"type": "string",
						"defaultValue": "Incremental"
					},
					"param_startdate": {
						"type": "string",
						"defaultValue": "20200101"
					},
					"param_enddate": {
						"type": "string",
						"defaultValue": "20201231"
					}
				},
				"folder": {
					"name": "Temetra"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Temetra_API_Response')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Execute Temetra_API_Response databricks notebook for API data ingestion",
				"activities": [
					{
						"name": "Temetra_API_Response",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/edw_discovery/Temetra/Temetra_API_Response"
						},
						"linkedServiceName": {
							"referenceName": "LS_DBR_ADF_Job_Cluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"databricksclusterid": {
									"value": "@pipeline().parameters.databricks_cluster_id",
									"type": "Expression"
								},
								"databrickssecretname": {
									"value": "@pipeline().parameters.databricks_secret_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"databricks_cluster_id": {
						"type": "string"
					},
					"databricks_secret_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Temetra/backup"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}