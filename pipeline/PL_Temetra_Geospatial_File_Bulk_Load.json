{
	"name": "PL_Temetra_Geospatial_File_Bulk_Load",
	"properties": {
		"activities": [
			{
				"name": "lkp_getfilemetadata",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT t.TargetBlobFilePath\n            ,t.TargetBlobFileName + '-' + cast(convert(date,[dbo].[udf_getLocalDTM](),121) as  \n varchar(10)) +  t.targetBlobFileNameExt AS targetBlobFileName\n            ,t.TargetBlobContainer\n            ,t.ColumnDelimiter\n            ,t.QuoteCharacter\nFROM ETL.SourceSystem S  \nInner join ETL.SourceTableDetails T\n ON S.SourceID = T.SourceID\nWHERE S.SourceName =  '@{pipeline().parameters.sourcename}'\nand lower(SourceTableName)='geospatial_devices'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_EDWDiscovery",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy_Geospatial_File_From_API_EndPoint",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "lkp_getfilemetadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_Temetra_Geospatial_Meters_Source",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_ABLB_Temetra_Geospatial_Sink",
						"type": "DatasetReference",
						"parameters": {
							"FolderPath": {
								"value": "@activity('lkp_getfilemetadata').output.Firstrow['TargetBlobFilePath']",
								"type": "Expression"
							},
							"TargetFileName": {
								"value": "@activity('lkp_getfilemetadata').output.Firstrow['TargetBlobFileName']",
								"type": "Expression"
							},
							"ColumnDelimiter": {
								"value": "@activity('lkp_getfilemetadata').output.Firstrow['ColumnDelimiter']",
								"type": "Expression"
							},
							"QuoteCharacter": {
								"value": "@activity('lkp_getfilemetadata').output.Firstrow['QuoteCharacter']",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "PL_Temetra_BlobToASQL",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Copy_Geospatial_File_From_API_EndPoint",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_Temetra_BlobToASQL",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"SourceName": {
							"value": "@pipeline().parameters.sourcename",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"sourcename": {
				"type": "string",
				"defaultValue": "TEMETRA-GEOSPATIAL-DEVICES"
			},
			"databricks_cluster_id": {
				"type": "string",
				"defaultValue": "1209-000519-adds90"
			},
			"databricks_secret_name": {
				"type": "string",
				"defaultValue": "databricks-token"
			}
		},
		"folder": {
			"name": "Temetra"
		},
		"annotations": []
	}
}