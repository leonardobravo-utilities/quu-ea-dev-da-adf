{
	"name": "PL_File_Export_To_NFUJPRD202",
	"properties": {
		"description": "This pipeline will export the Files at Network Path \\\\Nfujprd202\\FDrive",
		"activities": [
			{
				"name": "Files List to Export",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from ETL.FileExportList a where IsActive=1 and \nexists (select 1  from etl.fileexport b where  IsActive=1 and a.FileExportID=b.FileExportID and \nUpper(b.FileExportName)=Upper('@{pipeline().parameters.FileExportName}') )\n\n\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_EDWDiscovery",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachFile",
				"description": "Generate the Files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Files List to Export",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Files List to Export').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 20,
					"activities": [
						{
							"name": "Query Rowcount",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlMISource",
									"sqlReaderQuery": {
										"value": "@if(empty(item().SourceRowCountQuery),'select 1 as SourceRowCount',item().SourceRowCountQuery)",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_ASQL_EDWDiscovery",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "First Row Exists",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Query Rowcount",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(activity('Query Rowcount').output.firstRow.SourceRowCount,0))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "lkp_getlocattime",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlMISource",
												"sqlReaderQuery": {
													"value": "DECLARE @DateTimeFormat as varchar(20);\nDECLARE @localdatetime as datetime;\nSet @DateTimeFormat ='@{item().DateTimeFormatInFileName}';\nEXEC @localdatetime = [dbo].[udf_getLocalDTM];\nselect FORMAT(@localdatetime, Case when len(@DateTimeFormat)=0 then'yyyy_MM_dd_HHmmss' else @DateTimeFormat end) as  localstarttime;",
													"type": "Expression"
												},
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "DS_ASQL_EDWDiscovery",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "Generate File",
										"description": "",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "lkp_getlocattime",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@item().SourceQuery",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "FileServerWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ""
												}
											},
											"enableStaging": false,
											"dataIntegrationUnits": 0
										},
										"inputs": [
											{
												"referenceName": "DS_ASQL_EDWDiscovery",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DS_File_NFUJPRD202",
												"type": "DatasetReference",
												"parameters": {
													"TargetFilePath": {
														"value": "@item().TargetFilePath",
														"type": "Expression"
													},
													"TargetFileName": {
														"value": "@if(equals(item().IncludeDateTimeInFile_Name,1)\n,  concat(item().TargetFileName\n             ,'_'\n            ,activity('lkp_getlocattime').output.firstrow.localstarttime\n             ,item().TargetFileNameExt)\n,\nconcat(\nitem().TargetFileName\n,item().TargetFileNameExt)\n)\n\n",
														"type": "Expression"
													},
													"ColumnDelimiter": {
														"value": "@item().ColumnDelimiter",
														"type": "Expression"
													},
													"QuoteCharacter": {
														"value": "@item().QuoteCharacter",
														"type": "Expression"
													},
													"EscapeCharacter": {
														"value": "@item().EscapeCharacter",
														"type": "Expression"
													},
													"FirstRowHeader": {
														"value": "@item().FirstRowHeader",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Update Incremental Date",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Generate File",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[ETL].usp_update_fileexport_incrementaldatevalue",
											"storedProcedureParameters": {
												"FileID": {
													"value": {
														"value": "@item().FileID",
														"type": "Expression"
													},
													"type": "Int32"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_ASQL",
											"type": "LinkedServiceReference",
											"parameters": {
												"database_name": "edw_discovery"
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"FileExportName": {
				"type": "string",
				"defaultValue": "ICN"
			}
		},
		"folder": {
			"name": "File Export"
		},
		"annotations": [],
		"lastPublishTime": "2022-04-19T00:29:16Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}