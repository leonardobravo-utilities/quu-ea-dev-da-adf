{
	"name": "PL_Framework_Migration_BlobToASQL",
	"properties": {
		"activities": [
			{
				"name": "GetBlobStorageMetadata",
				"description": "check if any files need to process in the blob container",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ABLB_DataLanding_FileExists",
						"type": "DatasetReference",
						"parameters": {
							"blobcontainer": {
								"value": "@pipeline().parameters.blobcontainer",
								"type": "Expression"
							},
							"blobfolderpath": {
								"value": "@pipeline().parameters.blobfolderpath",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "CheckAnyCsvFilesAndExecuteDatabricks",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "CheckForCDCMigration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lkp_Sort_Collection').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "SetFileName",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileName",
								"value": {
									"value": "@replace(string(item().FileName),'\\\"\\\"','')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "executedatabricksnotebook",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "SetProcessFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@variables('processfile')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "CopyFileToArchive_Empty",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": false,
													"wildcardFolderPath": {
														"value": "@{pipeline().parameters.blobfolderpath}",
														"type": "Expression"
													},
													"wildcardFileName": {
														"value": "@{variables('FileName')}",
														"type": "Expression"
													},
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".csv"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "DS_ABLB_DataLanding_FileExists",
												"type": "DatasetReference",
												"parameters": {
													"blobcontainer": {
														"value": "@pipeline().parameters.blobcontainer",
														"type": "Expression"
													},
													"blobfolderpath": {
														"value": "@pipeline().parameters.blobfolderpath",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_ABLB_DataLanding_FileExists",
												"type": "DatasetReference",
												"parameters": {
													"blobcontainer": {
														"value": "@pipeline().parameters.blobcontainer",
														"type": "Expression"
													},
													"blobfolderpath": {
														"value": "@concat(pipeline().parameters.blobfolderpath,'/Archived/')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "DeleteSourceFile_Empty",
										"type": "Delete",
										"dependsOn": [
											{
												"activity": "CopyFileToArchive_Empty",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DS_ABLB_DataLanding_FileExists",
												"type": "DatasetReference",
												"parameters": {
													"blobcontainer": {
														"value": "@pipeline().parameters.blobcontainer",
														"type": "Expression"
													},
													"blobfolderpath": {
														"value": "@pipeline().parameters.blobfolderpath",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{variables('FileName')}",
													"type": "Expression"
												}
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "ETL_Merge",
										"type": "DatabricksNotebook",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebookPath": {
												"value": "@pipeline().parameters.ETLMergeNotebookPath",
												"type": "Expression"
											},
											"baseParameters": {
												"blobcontainer": {
													"value": "@pipeline().parameters.blobcontainer",
													"type": "Expression"
												},
												"storageaccount": {
													"value": "@pipeline().parameters.storageaccount",
													"type": "Expression"
												},
												"blobfilename": {
													"value": "@concat(pipeline().parameters.blobfilename,',',variables('FileName'))",
													"type": "Expression"
												},
												"columnlist": {
													"value": "@pipeline().parameters.columnlist",
													"type": "Expression"
												},
												"businesskeylist": {
													"value": "@pipeline().parameters.businesskeylist",
													"type": "Expression"
												},
												"deltastagingdbname": {
													"value": "@pipeline().parameters.deltastagingdbname",
													"type": "Expression"
												},
												"deltatargetdbname": {
													"value": "@pipeline().parameters.deltatargetdbname",
													"type": "Expression"
												},
												"deltastagetablename": {
													"value": "@pipeline().parameters.deltastagetablename",
													"type": "Expression"
												},
												"ColumnDelimiter": {
													"value": "@pipeline().parameters.ColumnDelimiter",
													"type": "Expression"
												},
												"QuoteCharacter": {
													"value": "@base64(pipeline().parameters.QuoteCharacter)",
													"type": "Expression"
												},
												"azuresqldbetllastmodifieddtm": {
													"value": "@formatDateTime(pipeline().parameters.azuresqldbetllastmodifieddtm,'yyyy-MM-dd hh:mm:ss.fff')",
													"type": "Expression"
												},
												"tableid": {
													"value": "@pipeline().parameters.tableid",
													"type": "Expression"
												},
												"deltastagingtableparquetfilepath": {
													"value": "@pipeline().parameters.deltastagingtableparquetfilepath",
													"type": "Expression"
												},
												"DbHostName": {
													"value": "@pipeline().parameters.DbHostName",
													"type": "Expression"
												},
												"azuresqltemptablename": {
													"value": "@pipeline().parameters.azuresqltemptablename",
													"type": "Expression"
												},
												"RowExecutionID": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"RowSource": {
													"value": "@pipeline().parameters.RowSource",
													"type": "Expression"
												},
												"skipcsvrows": {
													"value": "@pipeline().parameters.skipcsvrows",
													"type": "Expression"
												},
												"ETLMergeNotebookPath": {
													"value": "@pipeline().parameters.ETLMergeNotebookPath",
													"type": "Expression"
												},
												"skipchangedset": {
													"value": "@if(variables('CDCRun'),'1','0')",
													"type": "Expression"
												},
												"CDCMigrationInd": {
													"value": "@string(coalesce(pipeline().parameters.CDCMigrationInd,0))",
													"type": "Expression"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_DBR_ADF_Job_Cluster",
											"type": "LinkedServiceReference",
											"parameters": {
												"databricksclusterid": {
													"value": "@pipeline().parameters.databricksclusterid",
													"type": "Expression"
												},
												"databrickssecretname": {
													"value": "@pipeline().parameters.databrickssecretname",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "SqlServerStoredProcedureMergeData",
										"description": "execute merge store procedure to merge data from temp into target table in azure sql db",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "ETL_Merge",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": {
												"value": "@pipeline().parameters.StoredProcNameMergeAzuresqltable",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"table_source": {
													"value": {
														"value": "@pipeline().parameters.azuresqltemptablename",
														"type": "Expression"
													},
													"type": "String"
												},
												"table_target": {
													"value": {
														"value": "@pipeline().parameters.azuresqltargettablename",
														"type": "Expression"
													},
													"type": "String"
												},
												"tableid": {
													"value": {
														"value": "@pipeline().parameters.tableid",
														"type": "Expression"
													},
													"type": "Int32"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_ASQL",
											"type": "LinkedServiceReference",
											"parameters": {
												"database_name": "edw_discovery"
											}
										}
									},
									{
										"name": "CopyFileToArchive",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "SqlServerStoredProcedureMergeData",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": false,
													"wildcardFolderPath": {
														"value": "@{pipeline().parameters.blobfolderpath}",
														"type": "Expression"
													},
													"wildcardFileName": {
														"value": "@{variables('FileName')}",
														"type": "Expression"
													},
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".csv"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "DS_ABLB_DataLanding_FileExists",
												"type": "DatasetReference",
												"parameters": {
													"blobcontainer": {
														"value": "@pipeline().parameters.blobcontainer",
														"type": "Expression"
													},
													"blobfolderpath": {
														"value": "@pipeline().parameters.blobfolderpath",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_ABLB_DataLanding_FileExists",
												"type": "DatasetReference",
												"parameters": {
													"blobcontainer": {
														"value": "@pipeline().parameters.blobcontainer",
														"type": "Expression"
													},
													"blobfolderpath": {
														"value": "@concat(pipeline().parameters.blobfolderpath,'/Archived/')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "DeleteSourceFile",
										"type": "Delete",
										"dependsOn": [
											{
												"activity": "CopyFileToArchive",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DS_ABLB_DataLanding_FileExists",
												"type": "DatasetReference",
												"parameters": {
													"blobcontainer": {
														"value": "@pipeline().parameters.blobcontainer",
														"type": "Expression"
													},
													"blobfolderpath": {
														"value": "@pipeline().parameters.blobfolderpath",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{variables('FileName')}",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "TruncateTempTable",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "DeleteSourceFile",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "sp_executesql",
											"storedProcedureParameters": {
												"stmt": {
													"value": {
														"value": "truncate table @{pipeline().parameters.azuresqltemptablename}",
														"type": "Expression"
													}
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_ASQL",
											"type": "LinkedServiceReference",
											"parameters": {
												"database_name": "edw_discovery"
											}
										}
									}
								]
							}
						},
						{
							"name": "SetProcessFile",
							"description": "Process file if the file is csv and the file size is > 0 else do nothing",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SetFileSize",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "processfile",
								"value": {
									"value": "@if(AND(greater(variables('FileSize'),'0'), contains(variables('FileName'),'.csv') ),true,false)\n\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "RetrieveFileSize",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "SetFileName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_ABLB_DataLanding_FizeSize",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.blobcontainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.blobfolderpath",
											"type": "Expression"
										},
										"file": {
											"value": "@variables('FileName')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"size"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "SetFileSize",
							"description": "Assign the file size value to the variable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "RetrieveFileSize",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileSize",
								"value": {
									"value": "@string(activity('RetrieveFileSize').output.size)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "lkp_Sort_Collection",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetBlobStorageMetadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ETL].[usp_sort_blob_file_name]",
						"storedProcedureParameters": {
							"json": {
								"type": "String",
								"value": {
									"value": "@string(activity('GetBlobStorageMetadata').output)",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_EDWDiscovery",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "CheckForCDCMigration",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "lkp_Sort_Collection",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(equals(pipeline().parameters.CDCMigrationInd,1),not(equals(pipeline().parameters.CDCMigrationCompleted,1)))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "ETLMergeChangeset",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/edw_discovery/ETL_Merge_Changedset",
								"baseParameters": {
									"blobcontainer": {
										"value": "@pipeline().parameters.blobcontainer",
										"type": "Expression"
									},
									"blobfilename": {
										"value": "@concat(pipeline().parameters.CDCBlobPath,',',pipeline().parameters.deltastagetablename,'.csv')",
										"type": "Expression"
									},
									"columnlist": {
										"value": "@pipeline().parameters.columnlist",
										"type": "Expression"
									},
									"businesskeylist": {
										"value": "@pipeline().parameters.businesskeylist",
										"type": "Expression"
									},
									"deltastagingdbname": {
										"value": "@pipeline().parameters.deltastagingdbname",
										"type": "Expression"
									},
									"deltatargetdbname": {
										"value": "@pipeline().parameters.deltatargetdbname",
										"type": "Expression"
									},
									"deltastagetablename": {
										"value": "@pipeline().parameters.deltastagetablename",
										"type": "Expression"
									},
									"storageaccount": {
										"value": "@pipeline().parameters.storageaccount",
										"type": "Expression"
									},
									"ColumnDelimiter": {
										"value": "@pipeline().parameters.ColumnDelimiter",
										"type": "Expression"
									},
									"QuoteCharacter": {
										"value": "@base64(pipeline().parameters.QuoteCharacter)",
										"type": "Expression"
									},
									"azuresqldbetllastmodifieddtm": {
										"value": "@pipeline().parameters.azuresqldbetllastmodifieddtm",
										"type": "Expression"
									},
									"tableid": {
										"value": "@pipeline().parameters.tableid",
										"type": "Expression"
									},
									"deltastagingtableparquetfilepath": {
										"value": "@pipeline().parameters.deltastagingtableparquetfilepath",
										"type": "Expression"
									},
									"DbHostName": {
										"value": "@pipeline().parameters.DbHostName",
										"type": "Expression"
									},
									"RowSource": {
										"value": "@pipeline().parameters.RowSource",
										"type": "Expression"
									},
									"RowExecutionID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"skipcsvrows": {
										"value": "@pipeline().parameters.skipcsvrows",
										"type": "Expression"
									},
									"SourceTableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"CDCMigrationInd": {
										"value": "@string(coalesce(pipeline().parameters.CDCMigrationInd,0))",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_DBR_ADF_Job_Cluster",
								"type": "LinkedServiceReference",
								"parameters": {
									"databricksclusterid": {
										"value": "@pipeline().parameters.databricksclusterid",
										"type": "Expression"
									},
									"databrickssecretname": {
										"value": "@pipeline().parameters.databrickssecretname",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "UpdateCDCMigrationInd",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "ETLMergeChangeset",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ETL].[usp_update_CDCMigrationCompleted]",
								"storedProcedureParameters": {
									"tableid": {
										"value": {
											"value": "@pipeline().parameters.tableid",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL",
								"type": "LinkedServiceReference",
								"parameters": {
									"database_name": "edw_discovery"
								}
							}
						},
						{
							"name": "SetCDCRun",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "UpdateCDCMigrationInd",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "CDCRun",
								"value": {
									"value": "@bool(1)",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"blobcontainer": {
				"type": "string"
			},
			"storageaccount": {
				"type": "string"
			},
			"blobfilename": {
				"type": "string"
			},
			"columnlist": {
				"type": "string"
			},
			"businesskeylist": {
				"type": "string"
			},
			"deltastagingdbname": {
				"type": "string"
			},
			"deltatargetdbname": {
				"type": "string"
			},
			"deltastagetablename": {
				"type": "string"
			},
			"ColumnDelimiter": {
				"type": "string"
			},
			"azuresqldbetllastmodifieddtm": {
				"type": "string"
			},
			"tableid": {
				"type": "string"
			},
			"QuoteCharacter": {
				"type": "string"
			},
			"azuresqltemptablename": {
				"type": "string"
			},
			"blobfolderpath": {
				"type": "string"
			},
			"deltastagingtableparquetfilepath": {
				"type": "string"
			},
			"DbHostName": {
				"type": "string"
			},
			"RowSource": {
				"type": "string"
			},
			"azuresqltargettablename": {
				"type": "string"
			},
			"skipcsvrows": {
				"type": "string",
				"defaultValue": "0"
			},
			"ETLMergeNotebookPath": {
				"type": "string",
				"defaultValue": "/edw_discovery/ETL_Merge"
			},
			"StoredProcNameMergeAzuresqltable": {
				"type": "string",
				"defaultValue": "ETL.[usp_merge_azuresqltable]"
			},
			"databricksclustername": {
				"type": "string",
				"defaultValue": "ADF_Job_Cluster"
			},
			"databricksclusterid": {
				"type": "string",
				"defaultValue": "0827-051915-duchy366"
			},
			"CDCMigrationCompleted": {
				"type": "int"
			},
			"CDCBlobPath": {
				"type": "string"
			},
			"SourceTableName": {
				"type": "string"
			},
			"CDCMigrationInd": {
				"type": "int"
			},
			"databrickssecretname": {
				"type": "string"
			}
		},
		"variables": {
			"processfile": {
				"type": "Boolean"
			},
			"FileNames": {
				"type": "Array"
			},
			"FileName": {
				"type": "String"
			},
			"FileSize": {
				"type": "String"
			},
			"CDCRun": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "FrameWork"
		},
		"annotations": [],
		"lastPublishTime": "2022-04-19T00:29:11Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}