{
	"name": "PL_Framework_DM_DiscoveryToMart_DataCopy",
	"properties": {
		"activities": [
			{
				"name": "Load Each Model - Discovery to Mart Temp",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Model Objects To Load",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Model Objects To Load').output.value",
						"type": "Expression"
					},
					"batchCount": 10,
					"activities": [
						{
							"name": "Switch Load Type",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@item().LoadTypeName",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "Copy_Activity",
										"activities": [
											{
												"name": "Copy Dicovery to Mart Temp - Copy Activity",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('SELECT * FROM ', item().SourceSchemaName, '.', item().SourceObjectName, ' (NOLOCK)')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"preCopyScript": {
															"value": "@{concat('TRUNCATE TABLE TEMP.', item().TargetSchemaName, '_', item().TargetObjectName)}",
															"type": "Expression"
														},
														"writeBehavior": "insert",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_ASQL_EDWDiscovery",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ASQL_EDWMart_Target",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "TEMP",
																"type": "Expression"
															},
															"TableName": {
																"value": "@concat(item().TargetSchemaName, '_', item().TargetObjectName)",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "Databricks_Notebook",
										"activities": [
											{
												"name": "Copy Discovery to Mart Temp - Databricks Notebook",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": {
														"value": "@item().SourceTransformCommand",
														"type": "Expression"
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_DBR_ADF_Job_Cluster",
													"type": "LinkedServiceReference",
													"parameters": {
														"databricksclusterid": {
															"value": "@item().DatabricksClusterID",
															"type": "Expression"
														},
														"databrickssecretname": "databricks-token"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Get Model Objects To Load",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ETL].[usp_get_model_object_load_list]",
						"storedProcedureParameters": {
							"ModelName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.ModelName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_EDWDiscovery",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Load Each Model - Mart Temp to Target",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Load Each Model - Discovery to Mart Temp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Model Objects To Load').output.value",
						"type": "Expression"
					},
					"batchCount": 10,
					"activities": [
						{
							"name": "Copy Temp to Target",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@item().TargetLoadCommand",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"isDebugFlag": {
										"value": "false",
										"type": "Boolean"
									},
									"sourceObject": {
										"value": {
											"value": "@concat('TEMP.', item().TargetSchemaName, '_', item().TargetObjectName)",
											"type": "Expression"
										},
										"type": "String"
									},
									"targetObject": {
										"value": {
											"value": "@concat(item().TargetSchemaName, '.', item().TargetObjectName)",
											"type": "Expression"
										},
										"type": "String"
									},
									"isTruncateBeforeLoad": {
										"value": {
											"value": "@item().TruncateBeforeLoad",
											"type": "Expression"
										},
										"type": "Boolean"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_EDWMart",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ModelName": {
				"type": "string",
				"defaultValue": "Crew-Roster-Mart-Model"
			}
		},
		"folder": {
			"name": "FrameWork"
		},
		"annotations": []
	}
}